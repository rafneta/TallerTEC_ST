{
  "articles": [
    {
      "path": "ActividadST_0.html",
      "title": "Actividad 0",
      "description": "Objetivo: Tener disponible un ambiente para la ejecución de R.  \n\nTipo de trabajo: Individual\n",
      "author": [
        {
          "name": {},
          "url": "https://rafneta.github.io/"
        }
      ],
      "date": "July, 2022",
      "contents": "\n\nContents\nInstalación\nlocal\nRStudio\n\nUso de R en\ncolab\nUso del\nrepositorio\nOtras\nalternativas\n\n\n\n\n\nR es un lenguaje gratuito para computación estadística (Linux,\nMacOS, Windows)\n1991 creado por Ross Ihaka y Robert Gentleman, en 1993 se anuncia la\nprimer versión pública\n1995 se convierte en software gratuito.\nEs la versión no comercial de S, desarollado por John Chambers y\notros en Bell Labs (1976), inicialmente programdo en Fortran, en 1988 se\nescribe en C, 1998 sale la versión 4.\nAyuda en la red\nVersiones anuales\n“Menos amigable que MATLAB pero más que C++ y Fortran”\n“I have written software professionally in perhaps a dozen\nprogramming languages, and the hardest language for me to learn has been\nR,” writes consultant John D. Cook\nInstalación local\nEn el orden inidicado\nInstalar R\nInstalar\nRStudio\nRStudio\nConsole window (command window)\nEditor Window\nHistory, Environment\nFiles, Plots, Package\nDocumentación\nde RStudio\nVentanas de RUso de R en colab\nSe puede utilizar R en colab de google. Para ello se tienen por lo\nmenos dos alternativas\nEjecutar una celda de colab la instrucción\n%load_ext rpy2.ipython\nY posteriormente utilizar al principio de cada celda de código el\ncomando mágico %%R. Por ejemplo\n%%R\nx <- seq(0, 2*pi, length.out=50)\nx\nEsto permite la ejecución simultanea de Python y R en el mismo\nnotebook. El siguiente notebook\nmuestra este ejemplo\nEntrar a la siguiente dirección https://colab.to/r (posteriormente mover el archivo\ndesde Drive a la ubicación deseada). Directamente se puede comenzar a\ntrabajar con R. El siguiente colab\nde ejemplo se construye de esa manera.\nAl hacer uso de este ambiente se tienen algunas limitaciones y\nproblemas. Puede consultarse el post How\nto Use R with Google Colab Notebook para ver como instalar\npaquetes.\nUso del repositorio\nPuede utilizarse el siguiente servicio creado con binder. Es\nnecesario estar atento de la sesión si no se descarga el trabajo o se\ntiene tiempo inactivo se pueden perder los avances\nOtras alternativas\nKaggle\nRStudio Cloud\n\n\n\n",
      "last_modified": "2022-07-24T17:42:03-05:00"
    },
    {
      "path": "ActividadST_01.html",
      "title": "Actividad 0.1",
      "description": "Objetivo: Curso Básico de R\n\nTipo de trabajo: Individual\n",
      "author": [
        {
          "name": {},
          "url": "https://rafneta.github.io/"
        }
      ],
      "date": "July, 2022",
      "contents": "\n\nContents\nInstrucciones\n\nExiste un mundo de información para aprender R. Dependiendo de los\nobjetivos un material puede ser mejor que otro. Para\nfamiliarizarnos/Recordar R, trabajaras sobre el siguiente curso:\nR for Data\nScience\nInstrucciones\nGenera una cuenta en la plataforma del curso (en caso de ser\nnecesario)\nInscribete al curso indicado\nEntrega un enlace al certificado (puedes obtenerlo del QR que\ntiene tu certificado). Verifica que el enlace sea vsisible por\nexternos.\n\n\n\n",
      "last_modified": "2022-07-24T17:42:12-05:00"
    },
    {
      "path": "ActividadST_1.html",
      "title": "Actividad 1",
      "description": "Objetivo: Conocer las funciones básicas de los archivos R a partir de la revisión de conceptos de economía. \n\nTipo de trabajo: Individual o equipo (máximo 3 personas). Cada integrante entrega el mismo trabajo.  \n",
      "author": [
        {
          "name": {},
          "url": "https://rafneta.github.io/"
        }
      ],
      "date": "July, 2022",
      "contents": "\n\nContents\nInstrucciones\n\nEn el libro Lo\nque indican los indicadores\nInstrucciones\nGenera una cuenta en la plataforma del curso (en caso de ser\nnecesario)\nInscribete al curso indicado\nEntrega un enlace al certificado (puedes obtenerlo del QR que\ntiene tu certificado). Verifica que el enlace sea vsisible por\nexternos.\n\n\n\n",
      "last_modified": "2022-07-24T17:42:21-05:00"
    },
    {
      "path": "ActividadST_4.html",
      "title": "Actividad 4",
      "description": "Objetivos: Revisar dinámicas no linelaes en tiempo discreto. Conocer el modelo de Solow de creciemiento. \n\nTipo de trabajo: Individual o equipo (máximo 3 personas). Cada integrante entrega el mismo trabajo.  \n",
      "author": [
        {
          "name": {},
          "url": "https://rafneta.github.io/"
        }
      ],
      "date": "July, 2022",
      "contents": "\n\nContents\nEcuaciones en\ndiferencias, ejemplo en economía\nInstrucciones\n\n\nEcuaciones en\ndiferencias, ejemplo en economía\n\n\n\n\nShow code\ngrafica(simulacion([0.5 , 1, 1], [5, 3, 0],[-5, 2], lambda t: (0.5) ** t, 20))\n\ngrafica(simulacion([0.5 , 1, 1], [5, 3 , 0], [3, -2], lambda t: 10, 20))\n\nInstrucciones\nGenera una cuenta en la plataforma del curso (en caso de ser\nnecesario)\nInscribete al curso indicado\nEntrega un enlace al certificado (puedes obtenerlo del QR que\ntiene tu certificado). Verifica que el enlace sea vsisible por\nexternos.\n\n\n\n",
      "last_modified": "2022-07-24T17:42:25-05:00"
    },
    {
      "path": "ActividadST_5.html",
      "title": "Actividad 5",
      "description": "Objetivo: Visualizar y entender ejemplos de series de tiempo \n\nTipo de trabajo: Individual o equipo (máximo 3 personas). Cada integrante entrega el mismo trabajo.  \n",
      "author": [
        {
          "name": {},
          "url": "https://rafneta.github.io/"
        }
      ],
      "date": "August 1, 2022",
      "contents": "\n\nContents\nProblema 1: Tasa de\nDesempleo en Maine\nProblema 2: Tasa de\ndesempleo en EUA\n\nProblema 1: Tasa de\nDesempleo en Maine\nLas tasas de desempleo son uno de los principales indicadores\neconómicos utilizados por los políticos y otros tomadores de decisiones.\nPor ejemplo, influyen en las políticas de desarrollo regional y\nprovisión de bienestar.\nSe trabaja con la tasa de desempleo mensual del estado estadounidense\nde Maine desde enero de 1996 hasta agosto de 2006. En cualquier análisis\nde series de tiempo, es esencial comprender cómo se han recopilado los\ndatos y su unidad de medida. El Departamento de Trabajo de los Estados\nUnidos da definiciones precisas de los términos utilizados para calcular\nla tasa de desempleo.\nLos datos mensuales de desempleo están disponibles en un archivo en\nlínea que se lee en R. La primera fila del archivo contiene el nombre de\nla variable ( unemploy ), a la que se puede acceder\ndirectamente después de aplicar la función attach. Además, el\nparámetro header debe establecerse en TRUE para que R trate la\nprimera fila como el nombre de la variable en lugar de como datos.\n\n\ndireccion1 <- \"https://raw.githubusercontent.com/dallascard/\"\ndireccion2 <- \"Introductory_Time_Series_with_R_datasets/master/Maine.dat\"\ndireccion <- paste0(direccion1, direccion2)\n\nMaine.month <- read.table(direccion, header = TRUE)\n\nattach(Maine.month)\n\n\n\n\n\nInvestiga sobre los archivos .dat\n¿Qué diferencia existe entre la función paste y\npaste0?\n¿Cuantas filas tiene Maine.month y porqué ese\nnúmero es correcto?\n¿Qué tipo de dato es Maine.month?\n¿Explica que hace attach?\n\nEs necesario convertir los datos a tipo serie de tiempo. De acuerdo a\nla descripción del problema y al revisar la ayuda de la función\nts\n\n\nMaine.month.ts <- ts(unemploy, start = c(1996, 1), freq = 12)\n\n\n\nEl promedio anual es otro ejemplo de dato agreagdo que puede\ninteresar graficar\n\n\nMaine.annual.ts <- aggregate(Maine.month.ts)/12\n\n\n\n\n\n¿A que hace refrencia el parámetro freq?\nRealiza la gráfica de la serie de tiempo\nMaine.month.ts\nRealiza la gráfica de la serie de tiempo\nMaine.annual.ts\n\nEn promedio, el desempleo es \\(22\\%\\) más alto en febrero y \\(18\\%\\) menor en agosto. Esto se puede ver\nmediante las siguientes operaciones\n\n\nMaine.Feb <- window(Maine.month.ts, start = c(1996,2), freq = TRUE)\nMaine.Aug <- window(Maine.month.ts, start = c(1996,8), freq = TRUE)\nFeb.ratio <- mean(Maine.Feb) / mean(Maine.month.ts)\nAug.ratio <- mean(Maine.Aug) / mean(Maine.month.ts)\nc(Feb.ratio,Aug.ratio)\n\n\n[1] 1.2225290 0.8163732\n\nUna explicación es del fenómeno anterior es que Maine atrae turistas\ndurante el verano y eso genera empleos.\nProblema 2: Tasa de\ndesempleo en EUA\nSe tiene la tasa mensual de desempleo para todo EUA de enero de 1996\na octubre de 2006\n\n\ndireccion2 <- \"Introductory_Time_Series_with_R_datasets/master/USunemp.dat\"\ndireccion <- paste0(direccion1, direccion2)\nUS.month <- read.table(direccion, header = T)\n\n\n\n\n\nElabora un reporte sobre tus observaciones de la tasa de desempleo\nde EUA\n\n\n\n\n",
      "last_modified": "2022-07-24T17:42:35-05:00"
    },
    {
      "path": "DefinicionesEsta.html",
      "title": "Covarianza",
      "description": "3.1: \n\n3.1.3: \n\nPortafolio de R\n",
      "author": [
        {
          "name": {},
          "url": "https://github.com/yihui"
        }
      ],
      "date": "May 4, 2022",
      "contents": "\n\nContents\nEsperanza\nPropiedades\n\nVarianza\nPropiedades\n\nCovarianza\nPropiedades\n\n\nEsperanza\nPropiedades\nSi \\(X\\), \\(Y\\) son variables aleatorias con esperanza\nfinita, y \\(a,b,c,d\\in\\mathbb{R}\\)\nentonces\n\\(\\mathrm{E}[c]=c\\)\n\\(\\mathrm{E}[c X]=c\n\\mathrm{E}[X]\\)\nSi \\(X \\geq 0\\) entonces \\(\\mathrm{E}[X] \\geq 0\\).\nSi \\(X \\leq Y\\) entonces \\(\\mathrm{E}[X] \\leq \\mathrm{E}[Y]\\)\nSi \\(X\\) está delimitada por dos\nnúmeros reales, \\(a\\) y \\(b\\), esto es \\(a<X<b\\) entonces también lo está su\nmedia, es decir, \\(a<\\mathrm{E}[X]<b\\).\nSi \\(Y=a+b X\\), entonces \\(\\mathrm{E}[Y]=\\mathrm{E}[a+b X]=a+b\n\\mathrm{E}[X]\\).\nEn general, \\(\\mathrm{E}[X Y] \\neq\n\\mathrm{E}[X] \\mathrm{E}[Y]\\), la igualdad sólo se cumple cuando\nlas variables aleatorias son independientes.\n\\(\\mathrm{E}(X+ Y)=\\mathrm{E}(X) +\n\\mathrm{E}(Y)\\)\nVarianza\nLa varianza de la VA \\(X\\) se define\ncomo\n\\[\\operatorname{Var}(X) =\n\\operatorname{E}\\left(X-\\mu_X\\right)=\\sigma^2_X\\]\nPropiedades\nSi \\(X\\), \\(Y\\) son variables aleatorias con varianza\nfinita, y \\(a\\in\\mathbb{R}\\)\nentonces\n\\(\\operatorname{Var}(X) \\geq\n0\\)\n\\(\\operatorname{Var}(a)=0\\)\n\\(\\operatorname{Var}(a X)=a^{2}\n\\operatorname{Var}(X)\\)\n\\(\\operatorname{Var}(X+Y)=\\operatorname{Var}(X)+\\operatorname{Var}(Y)+2\n\\operatorname{Cov}(X, Y)\\), donde \\(\\operatorname{Cov}(X, Y)\\) denota la\ncovarianza de \\(X\\) e \\(Y\\)\n\\(\\operatorname{Var}(X+Y)=\\operatorname{Var}(X)+\\operatorname{Var}(Y)\\)\nsi \\(X\\) y \\(Y\\) son variables aleatorias\nindependientes.\n\\(\\operatorname{Var}(Y)=\\mathrm{E}(\\operatorname{Var}(Y\n\\mid X))+\\operatorname{Var}(\\mathrm{E}(Y \\mid X))\\) cálculo de la\nVarianza por Pitágoras, dónde \\(Y \\mid\nX\\) es la variable aleatoria condicional \\(Y\\) dado \\(X\\).\n\\(\\operatorname{Var}(X) =\n\\operatorname{E}(X^2)- \\mu_X^2\\)\nCovarianza\nLa covarianza de dos variables aleatorias se define como\n\\[\\operatorname{Cov}(X,Y) =\n\\operatorname{E}\\left(\\left(X-\\mu_X\\right)\\left(Y-\\mu_Y\\right)\\right)\\]\nsiempre que\nPropiedades\nSi \\(X\\), \\(Y\\), \\(W\\), \\(V\\)\nson variables aleatorias, y \\(a,b,c,d\\in\\mathbb{R}\\) entonces\n\\(\\operatorname{Cov}(X, a)=0\\)\n\\(\\operatorname{Cov}(X,\nX)=\\operatorname{Var}(X)\\), donde \\(\\operatorname{Var}(X)\\) denota la varianza\nde \\(X\\).\n\\(\\operatorname{Cov}(X,\nY)=\\operatorname{Cov}(Y, X)\\) llamada propiedad de simetría.\n\\(\\operatorname{Cov}(a X, b Y)=a b\n\\operatorname{Cov}(X, Y)\\)\n\\(\\operatorname{Cov}(X+a,\nY+b)=\\operatorname{Cov}(X, Y)\\)\n\\(\\operatorname{Cov}(a X+b Y, c W+d V)=a c\n\\operatorname{Cov}(X, W)+a d \\operatorname{Cov}(X, V)+b c\n\\operatorname{Cov}(Y, W)+b d \\operatorname{Cov}(Y, V)\\)\n\\(\\operatorname{Cov}(X, Y)=\\mathrm{E}[X\nY]-\\mathrm{E}[X] \\mathrm{E}[Y]\\), fórmula que suele emplearse en\nla práctica para calcular la covarianza.\n\\(\\operatorname{Cov}(X, Y)=0\\) si\n\\(X\\) y \\(Y\\) son VA independientes.\n\n\n\n",
      "last_modified": "2022-07-24T17:42:39-05:00"
    },
    {
      "path": "Distribuciones.html",
      "title": "Distribuciones",
      "description": "3.1: Distribuciones de Probablibilidad\n\n3.1.3: Distrubución normal \n\nPortafolio de R\n",
      "author": [
        {
          "name": {},
          "url": "https://github.com/yihui"
        }
      ],
      "date": "May 4, 2022",
      "contents": "\n\nContents\nRevisión\nprevia\nDistribuciones de\nprobabilidad\nDistribución normal\nImplementación\nEjemplo 1\nEjemplo 2\nEjemplo 3\nEjemplo 4\nEjemplo 5\nEjemplo 6\n\n\nPortafolio de\nR\n\nRevisión previa\nSe considera una exposición general.\nLa exposición se puede adaptar para más o menos detalles\ntécnicos\nDistribuciones de\nprobabilidad\n\n\nEn el siguiente documento\nse describen las distribuciones implementadas en R.\nNotas\nsobre distribuciones\nDistribución normal\nSe dice que una variable aleatoria (VA) \\(X\\), tiene distribución normal (o se\ndistribuye normal) con media \\(\\mu\\) y\ndesviación estándar \\(\\sigma\\), \\(X\\sim \\mathcal{N}(\\mu,\\sigma)\\), si su\nfunción de densidad de probabilidad está determinada\npor\n\\[f(x) = \\frac{1}{\\sqrt{2 \\pi} \\sigma}\ne^{-\\frac{(x - \\mu)^2}{2 \\sigma^2}}\\] Mientras que su función de\ndistribución de probabilidad es\n\\[F(x)=P(X\\leq x)=\\int_{-\\infty}^x f(t)\n\\,dt=\\frac{1}{\\sqrt{2 \\pi} \\sigma}\\int_{-\\infty}^x e^{-\\frac{(t -\n\\mu)^2}{2 \\sigma^2}}\\,dt\\]\nImplementación\nLa biblioteca stats cuenta con cuatro prefijos que hacen\nreferencia a funciones relacionadas con las distribuciones.\nd: función de densidad o de probabilidad.\np: función de distribución\nq: función para el cálculo de cuantiles.\nr: función para simular datos con dicha\ndistribución\nPara el caso de la distribución normal se tiene:\ndnorm\npnorm\nqnorm\nrnorm\nEjemplo 1\nSe ilustra el uso de dichas funciones para una VA \\(X\\sim \\mathcal{N}(0,1)\\)\n\n\nprint(dnorm(0))\n\n\n[1] 0.3989423\n\nprint(pnorm(0))\n\n\n[1] 0.5\n\nprint(qnorm(0.5))\n\n\n[1] 0\n\nprint(rnorm(5))\n\n\n[1] -1.3019435  0.9609719 -0.3818484 -0.5060742 -0.5448318\n\nSe realiza la gráfica de la función de densidad y de distribución\n\n\ncurve(dnorm(x,0,1),xlim=c(-5,5),col=\"#004A97\",lwd=3,\n      xlab=\"x\",ylab=\"f(x)\",main=\"Función de densidad N(0,1)\")\n\n\n\n\n\n\ncurve(pnorm(x,0,1),xlim=c(-5,5),col=\"#004A97\",lwd=3,\n      xlab=\"x\",ylab=\"F(x)\",main=\"Función de distribución N(0,1)\")\n\n\n\n\nEjemplo 2\nAhora para una VA \\(X\\sim\n\\mathcal{N}(10,0.5)\\)\n\n\nprint(dnorm(10, mean = 10, sd = 0.5))\n\n\n[1] 0.7978846\n\nprint(pnorm(10, mean = 10, sd = 0.5))\n\n\n[1] 0.5\n\nprint(qnorm(0.5, mean = 10, sd = 0.5))\n\n\n[1] 10\n\nprint(rnorm(5, mean = 5, sd = 0.5))\n\n\n[1] 5.127648 5.538103 4.203907 4.120007 4.934588\n\nSe realiza la gráfica de la función de densidad y de distribución\n\n\ncurve(dnorm(x,10,0.5),xlim=c(3,17),col=\"#004A97\",lwd=3,\n      xlab=\"x\",ylab=\"f(x)\",main=\"Función de densidad N(10,0.5)\")\n\n\n\n\n\n\ncurve(pnorm(x,10,0.5),xlim=c(3,17),col=\"#004A97\",lwd=3,\n      xlab=\"x\",ylab=\"F(x)\",main=\"Función de distribución N(10,0.5)\")\n\n\n\n\nEjemplo 3\nDada \\(X\\sim \\mathcal{N}(50,10)\\)\nencuentra la probabilidad que asuma los calores entre 45 y 62.\nEntonces\n\\[P(45<X<62)= P(X\\leq 62) - P(X\\leq\n45)=F(62)- F(45)\\]\n\n\npnorm(62, mean = 50, sd = 10) - pnorm(45,mean = 50, sd = 10)\n\n\n[1] 0.5763928\n\nCreamos una función para esta visualización.\n\n\nproba_gra <- function(a,b,mean = 0, sd = 1){\n  \n  regionX=seq(a,b,0.01) # Intervalo a sombrear  \n  xP <- c(a,regionX,b) # Base de los polígonos que crean el efecto \"sombra\"\n  yP <- c(0,dnorm(regionX,mean,sd),0)   # Altura de los polígonos sombreados\n  \n  curve(dnorm(x,mean,sd),\n        xlim = c(mean-5*sd,mean+5*sd),\n        yaxs = \"i\",\n        ylab = \"f(x)\",\n        ylim = c(0, dnorm(mean,mean,sd)*1.2),\n        col = \"#004A97\",\n        lwd = 3,\n        main = paste('Densidad N(',as.character(mean),',',\n                     as.character(sd),')')\n        )\n  polygon(xP,yP,col=\"#CAA977\")\n  }\n\n\n\n\n\nproba_gra(45, 62, mean = 50, sd = 10)\n\n\n\n\nEjemplo 4\nDada una VA \\(X\\sim \\mathcal{N}(40,\n6)\\), encuentra el valor de \\(x\\) tal que\nEl \\(45\\%\\) del área está a la\nizquierda de \\(x\\)\nEl \\(14\\%\\) del área está a la\nderecha de \\(x\\)\nPara el inciso a se observa que la solución coincide directamente con\nla definición de cuantil\n\n\nqnorm(0.45, mean = 40, sd = 6)\n\n\n[1] 39.24603\n\n\n\nproba_gra(-100, 39.24, mean = 40, sd = 6)\n\n\n\n\nPara el inciso b se toma el complemento del área para utilizar el\ncuantil\n\n\nqnorm(1-0.14, mean = 40, sd = 6)\n\n\n[1] 46.48192\n\n\n\nproba_gra(46.48, 100, mean = 40, sd = 6)\n\n\n\n\nEjemplo 5\nSimulamos datos que tengan distribución normal estándar\n\n\ndatos <- rnorm(n=10000, mean=0, sd=1)\nplot(datos, col = \"#004A97\", cex = 0.3, pch=19)\n\n\n\n\nSe pueden pensar que estos datos se obtuvieron de realizar la\nmedición de un variable \\(X\\). Se\ngráfican los 10000 datos en el eje horizontal\n\n\nplot(datos,rep(0,10000), col = \"#004A97\", cex = 0.5, pch=19,\n     ylab = \"\")\n\n\n\n\nGeneramos el histograma de estos datos\n\n\nhist(datos, \n     main = \"Histograma\", ylim = c(0,2000),\n     ylab = \"\", col = \"#CAA977\", xlim = c(-5, 5))\n\n\n\n\nPodemos pensar que estos datos tienen un distribución normal (bajo la\nsuposición no sabíamos que distribución tenían)\n\n\nhist(datos, \n     main = \"Función de densidad normal e histograma\",\n     ylab = \"\", col = \"#CAA977\", xlim = c(-5, 5), freq = FALSE)\n\ncurve(dnorm(x, mean=mean(datos), sd=sd(datos)),\n      from = -5,\n      to = 5,\n      col=\"#004A97\",\n      lwd=3,\n      add = TRUE)\n\n\n\n\nEjemplo 6\nCrea una función para realizar graficas de densidades normales,\nutiliza la biblioteca de gggplot2\nCargamos la biblioteca\n\n\nlibrary(ggplot2)\n\n\n\n\n\nproba_gra_gg <-function(mean,sd){\n  base <- ggplot() + xlim(mean-5*sd, mean + 5*sd)\n  \n  base + geom_function(fun = dnorm,\n                       args = list(mean = mean, sd = sd),\n                       colour = \"#004A97\") + theme_bw() +\n    labs(title = \"Función de densidad normal\",\n         subtitle =  paste(\"Media:\",\n                           as.character(mean),\n                           \"Desviación estándar:\",\n                           as.character(sd))) + \n    xlab(\"x\")  + ylab(\"f(x)\") +\n    theme(plot.title = element_text(size = 20),\n          plot.subtitle = element_text(size = 15),\n          axis.title = element_text(size = 15),\n          axis.text = element_text(size = 10),\n          legend.position=\"top\",\n          legend.title = element_text(size=8, face=\"bold\"),\n          legend.text = element_text(size=6, face=\"bold\"))\n\n}\n\n\n\nUtilizamo al función para hacer la gráfica de una VA \\(X\\sim\\mathcal{N}(4,0.4)\\)\n\n\nproba_gra_gg(4,0.4)\n\n\n\n\nPortafolio de R\nVisualización de COVID y series de tiempo\nhttps://rafneta.github.io/PruebaPaginaR/_site/\nEstudio sobre movilidad intergeneracional y diferencias\nregionales en México\nhttps://rafneta.github.io/TesinaCIDEMERMM/index.html\nEconometría\nhttps://rafneta.github.io/ECNIITareas/\nEvalución de Programas sociales\nhttps://rafneta.github.io/EPSTareas/\nAplicación para modelos ARMA\nhttps://rafneta.shinyapps.io/ARMA/\nSeries de tiempo\nhttps://rafneta.github.io/STTareas/Tarea2ST.html\n\n\n\n",
      "last_modified": "2022-07-24T17:43:02-05:00"
    },
    {
      "path": "index.html",
      "title": "Taller de series de tiempo ",
      "description": "\nTaller sobre series de tiempo, para estudiantes de Ingeniería en Ciencias de Datos y Matemáticas del Tec de Monterrry Campus Estado de México.\n\nDr. Rafael Martínez Martínez\n",
      "author": [],
      "contents": "\n\nContents\nPresentación\nRequisitos\nHerramientas\nCalendario\nPropósito de la unidad de\naprendizaje\nCompetencias a desarrollar\nTemario\nForma de\nevaluación\nReferencias\nPolíticas\n\nPresentación\nDr. Rafael Martínez Martínez\nramartinezr@tec.mx\nLinkedin: [enlace]\npágina: [enlace]\nRequisitos\nHerramientas\nCalendario\nPropósito\nde la unidad de aprendizaje\nCompetencias a\ndesarrollar\nTemario\nForma de evaluación\n\nActividades a evaluar\nPorcentaje\n\nEjercicios de análisis estadísticos con\nprograma R\n50.0\n\nEntrega del primer borrador de tesis de\ngrado\n40.0\n\nPresentación del primer borrador\n10.0\n\n\n100.0\n\n\n\nPara la calificación final se tiene el siguiente esquema. Sea \\(x\\in\\mathbb{R}\\), la calificación\nobtenida\nCondición\n\nCalificación final\n\\(x \\pmod{10}\n< 5\\)\n\\(\\rightarrow\\)\n\\(\\left\n\\lfloor x/10 \\right \\rfloor\\)\n\\(x \\pmod{10}\n\\geq 5\\)\n\\(\\rightarrow\\)\n\\(\\left \\lceil\nx/10 \\right \\rceil\\)\n\n\n\nReferencias\nPolíticas\n\n\n\n",
      "last_modified": "2022-07-24T17:43:06-05:00"
    },
    {
      "path": "IntroR.html",
      "title": "Introducción a R",
      "description": "Intriducción a R\n",
      "author": [
        {
          "name": {},
          "url": "https://rafneta.github.io/"
        }
      ],
      "date": "July, 2022",
      "contents": "\n\nContents\nDirectorio de trabajo y\nayuda\nDatos simples (clases\notomicas)\nOperaciones directas con\ndatos simples\nAlgunas instrucciones\nútiles\nScripts\n\nDatos compuestos (clases)\nVectores\nEjercicio\n\nListas\nMatrices\nFactors\nData frames\nDatos\nno disponibles\n\nGráficas\nGráficas con Lattice\nGráficas con ggplot2\n\nLeer\ny escribir datos\nLeer datos\nEscribir\ndatos\n\nProgramación\nif-else\nfor\nwhile\nrepeat\nFunciones\nPaquetes\nlapply\nsapply\napply mapply\nvapply\ntapply\nsplit\nFechas y\ntiempo\n\nLeer Datos\nLeer Bases de datos con\nMySQL\nLeer datos y escribir con\nHDF5\nLeer datos de páginas\nweb (el código HTML)\nLeer\ndatos de API’s (Application programmming Interface, ejemplo\nTwitter)\nLeer\notro tipo de datos (imagenes, musica, archivos de otrso programs: SAS,\nExcel)\n\n\nSe supone que se tienen una interfaz para programar en R\nDirectorio de trabajo y\nayuda\nDirecotrio de trabajo comando\n\n\ngetwd() # obtiene la carpeta en la cual se esta trabajando\nsetwd(\"~/Dropbox/UNAM/Econometria\")\nsetwd(\"C:/Sharon/Documents/RProjects\")\ndir() #despliega los archivos del directorio\n\n\n\nDirectorio de trabajo con ambiente gráfico Session-Set Working\nDirectory\nAyuda en console\n\n\nhelp.start()\nhelp(matrix) # aplica también para funciones\n?matrix # aplica también para funciones \napropos(\"matrix\") \nexample(\"matrix\")\nargs(rnorm) # conocer los argumentos de una función\n\n\n\nAyuda en la web\nhttps://rseek.org/\n\nComentarios\n\n\n# Ignorado por el programa, por linea\n\n\n\nLibrerias disponibles\n\n\nlibrary()\n\n\n\nInstalar paquetes, actualizar\n\n\nupdate.packages() # Actualizar todos los paquetes\ninstall.packages(\"mcsm\")\nupdate.packages(\"mcsm\")\n\n\n\nLibrerias disponibles\n\n\nlibrary()\n\n\n\nCargar libreria disponible\n\n\nlibrary(MASS)\nlibrary(coda)\nlibrary(mcsm)\n\n\n\nDatos simples (clases\notomicas)\nnull (por ejemplo, c())\nlogicos (TRUE, FALSE, o T, F) la constante NA (Not Available)\nnuméricos (3.0, 0.132)\nenteros\ncomplejos\n(-1-2i,complex(1,-1,2))\ncaracteres (“hola”, “mundo”)\ncon la instrucció attributes() se pueden conocer los\natributos de la clase especifica.\nOperaciones directas con\ndatos simples\nSe pueden realizar operaciones directamente en la consola\n\n\n2 ^ 2 - 3.5\n5 < 45\nhelp(Arithmetic)\n??Relational\n\n\n\n\n\n\nFigure 1: Operadores aritmeticos\n\n\n\n\n\n\nFigure 2: Operadores relacionales\n\n\n\nAsignación\n\n\na = 2 ^ 2 - 3.5 # No estándar\nb <- 23;\nc <- b + a\nc\nc * 7\na <- a + 4.5\na\nls() #despliega los nombres de las variables generadas\nprint(c) #imprime el valor de\n\n\n\nFunciones con “datos simples”\n\n\nrnorm(a)\nrnorm(n = a, mean = 3, sd = 5)\nx <- rnorm(n = 10000, mean = 3, sd = 5) \nplot(x) \nhist(x) \nx <- runif(n = 10000) \nplot(x) \nhist(x)\n\n\n\nFunciones útiles\n\n\nhelp(Trig)\nhelp(log)\nhelp(Special)\n\n\n\n\n\n\nFigure 3: Funciones trigonometricas\n\n\n\n\n\n\nFigure 4: Funciones log y expo\n\n\n\n\n\n\nFigure 5: Funciones especiales\n\n\n\nAlgunas instrucciones útiles\nBorrar consola\n\n\ncat(\"\\014\") \n\n\n\nBorrar variables\n\n\nrm(a)\nrm(list=ls())\n\n\n\nConstantes\n\n\npi\nexp(1)\nInf\n1 / 0\nNaN\n\n\n\nScripts\nFile-New File-R Script\nsource(‘Script1.R’)\nDesde la interfaz RStudio\nDatos compuestos (clases)\nvector\nlist\nmatrix\narray\nfactor\ntime-series\ndata.frame\nVectores\nc(…) datos del mismo tipo “concatenate”\n\n\na <- c(1 + 0i, 2 + 4i) # números complejos\na\na <- 9 : 29 # genera una secuencia de numeros desde el 9 al 29\na\na <- vector(\"numeric\", length = 10) # función vector()\na\na <- c(-1, 5, 45, 9.5)\na\nnames(a) <- c(\"nombre1\", \"nombre2\", \"nombre3\", \"nombre4\") # podemos nombrar los elementos\na\n\n\n\n\n\nb <- c(TRUE, FALSE)\nb\nc <- c() # vector vacio \n\n\n\n\n\nb <- c(\"hola\", \"mundo\", \"adios\", \"cruel\")\nb\n\n\n\nCoersión\n\n\nb <- c(1.7, \"hola\") # caracteres\nb\nb <- c(T, 2.3) # numerico\nb\nclass(b) # nos indica que clase de dato es\nas.logical(b) # coersión explicita\nas.complex(b)\nb <- c(\"hola\", TRUE, FALSE, F) # caracteres\nb\n\n\n\nElementos\n\n\nb <- c(\"comida\", \"comida\", \"zeta\", \"camion\", \"zeta\", \"comida\")\nb[1] # cuenta desde el elemento 1\nb[2:4]\nb[b < \"Tito\"]\nu <- b < \"Tito\"\nu\nb[u]\n\n\n\nOperaciones\n\n\na\n2 * a\na * a\nvec2 <- seq(from=0, to=1, by=0.3)\nvec2\na + vec2 \nvec2 > 0.5\nvec2 == 0\nvec2 * a\nvec2 / a\n\n\n\nFunciones aplicadas a vectores.\n\n\na\nd <- sum(a)\nd\nt(a)\nmean(a)\nsqrt(a)\nexp(a)\n\n\n\nEjercicio\nCálcula la siguiente expresión para \\(n\\in\\{10,100,1000,10000\\}\\) con \\(x_i\\sim\\mathcal{U}(0,1)\\)\n\\[S_n=\\frac{5}{n\\sqrt{2\\pi}}\\sum_{i=1}^ne^{-\\frac{(5x_i-2.5)^2}{2}}\\]\n\n\nn <- 10000\n  x <- runif(n)\n  Sn <- (5 / (n * (sqrt(2 * pi)))) * sum(exp(-(1/2) * (5 * x - 2.5) ^ 2))\n  Sn\n  \n\n[1] 0.9899043\n\nListas\nElementos de diferentes tipos\n\n\nL <- list(uno = 1, dos = c(1,2), tres = seq(0, 1, length = 5), cuatro = c(\"hola\", \"adios\"))\nL\nnames(L)\nL$tres+10\nL[2] # es una sublista de L \nL[[2]] # es un vector númerico, semanticamente igual a $\nclass(L[2])\nclass(L[[2]])\nL[\"cuatro\"]\nL[[\"cuatro\"]]\nL[c(1,3)]\nL[[c(3,3)]]\nL[[3]][[3]]\n\n\n\nMatrices\nSon vectores con un atributo de dimensión, este atributo es un vector\nde enteros de longitud 2 (nrow, ncol)\nDefinición con número de columnas o filas\n\n\nA <- matrix(data = c(1, 2 , 1, 4, 1, 6), ncol = 3)\nA\nB <- matrix(1:9, byrow= TRUE, nrow = 3)\nB \nx <- matrix(rnorm(15), nrow = 3)\nx\nm <- matrix(nrow = 2, ncol = 2)\nm\ndim(m)\nattributes(m)\ndimnames(m) <- list(c(\"fil1\", \"fil2\"), c(\"col1\", \"col2\")) #nombramos a las filas y columnas\nm\n\n\n\nDefinición concatenando vectores o motrices, por filas o\ncolumnas\n\n\nx <- c(1, 3, 5)\ny <- c(2, 4, 6)\nm1 <- cbind(x, y)\nm1\nm2 <- rbind(x, y)\nm2\n\n\n\nElementos\n\n\nA\nA[2, 3]\nA[1,] # como vector\nclass(A[1,])\nA[1, , drop= FALSE] # como matriz\nclass(A[1, , drop= FALSE])\nA[, 2]\nA[1:2, 1]\nA[[5]]\n\n\n\nOperaciones\n\n\nA <- matrix(1:4, 2, 2); B <- matrix(1:4,2,2)\nA / 5\nA * B\nA / B\nA %*% B\n\n\n\nFunciones\n\n\nmean(A)\n\n\n\nOtras funciones asociadas\nrownames\ncolnames\nrowSums\ncolSums\nFactors\nSon utilizados para representar datos categoricos (nominales: sin\norden, ordinales: con orden), pueden ser ordenados o no.\n\n\nx <-  factor(c(\"si\", \"si\", \"no\", \"si\", \"no\"))\nx # los levels son rodenados alfabeticamente\ntable(x)\nunclass(x)\nx <- factor(c(\"si\", \"si\", \"no\", \"si\", \"no\"), levels = c(\"si\", \"no\")) # indicar el orden de los levels, incluso podrian ser cosas distintas\nx\nsummary(x)\n\n\n\n\n\n# Create speed_vector\nspeed_vector <- c(\"medium\", \"slow\", \"slow\", \"medium\", \"fast\")\n\n# Convert speed_vector to ordered factor vector\nfactor_speed_vector <- factor(speed_vector,\n                              ordered = TRUE,\n                              levels = c(\"slow\", \"medium\", \"fast\"))\n\n# Print factor_speed_vector\nfactor_speed_vector\n\n\n[1] medium slow   slow   medium fast  \nLevels: slow < medium < fast\n\nsummary(factor_speed_vector)\n\n\n  slow medium   fast \n     2      2      1 \n\nfactor_speed_vector[2] > factor_speed_vector[5]\n\n\n[1] FALSE\n\nData frames\nMatriz con nombres es las columnas, se pueden pensar tambien como\nlistas donde cada elemento tiene la misma longitud, los nombres\n(elementos de la lista) van en las columnas y la cantidad de elementos\nen las filas. A diferecnia de las matrices pueden almancenar diferentes\ntipos de datos. Las instrucciones read.table() y\nread.csv() regresan data frames. De ser posible se\npuede convertir un data frame a una matriz utilizando\ndata.matrix. Tiene 3 atributos: names,\nrow.names, class\n\n\ndf <- data.frame(x = c(11, 12, 14), y = c(19, 20, 21), z = c(10, 9, 7))\ndf\ndata.matrix(df)\nx <- data.frame(c1 = 1:3, c2 = c(\"a\", \"b\", \"c\"))\nx\nattributes(x)\nnrow(x)\nncol(x)\n\n\n\n\n\nhead(df)\ntail(df)\nstr(df)\n\n\n\nElementos\n\n\ndf$z\ndf[1,2]\ndf[\"x\"]\ndf[[\"x\"]]\ndf[1:2, ]\ndf[, 2]\ndf[1:2, \"y\"]\nsubset(df, y == 20)\n\n\n\nFunciones\n\n\nmean(df$z)\n\n\n\nDatos no disponibles\nNA (datos faltantes) o NaN para operaciones matemáticas indefinidas.\nUn NaN es un NA pero no el converso no es cierto\n\n\nj = c(1, 2, NA)\nj\nmax(j, na.rm = TRUE)\nj\nis.na(j)\nis.nan(j)\nnodisponible <- is.na(j)\nj[nodisponible]\nj[!nodisponible]\n\n\n\nGráficas\n\n\nlibrary(datasets)\nhist(airquality$Ozone) \n\nlibrary(datasets)\nwith(airquality, plot(Wind, Ozone))\n\n\n\n\n\nlibrary(datasets)\nairquality <- transform(airquality, Month = factor(Month))\nboxplot(Ozone ~ Month, airquality, xlab = \"Month\", ylab = \"Ozone (ppb)\")\nwith(airquality, plot(Wind, Ozone))\ntitle(main = \"Ozone and Wind in New York City\") ## Add a title\nwith(airquality, plot(Wind, Ozone))\ntitle(main = \"Ozone and Wind in New York City\") ## Add a title\nwith(airquality, plot(Wind, Ozone, main = \"Ozone and Wind in New York City\",\n                      type = \"n\"))\nwith(subset(airquality, Month == 5), points(Wind, Ozone, col = \"blue\"))\nwith(subset(airquality, Month != 5), points(Wind, Ozone, col = \"red\"))\nlegend(\"topright\", pch = 1, col = c(\"blue\", \"red\"), legend = c(\"May\", \"Other Months\"))\n\n\n\n\n\nwith(airquality, plot(Wind, Ozone, main = \"Ozone and Wind in New York City\",\n                      pch = 20))\nmodel <- lm(Ozone ~ Wind, airquality)\nabline(model, lwd = 2)\n\n\n\n\n\n\npar(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))\nwith(airquality, {\n  plot(Wind, Ozone, main = \"Ozone and Wind\")\n  plot(Solar.R, Ozone, main = \"Ozone and Solar Radiation\")\n  plot(Temp, Ozone, main = \"Ozone and Temperature\")\n  mtext(\"Ozone and Weather in New York City\", outer = TRUE)\n})\n\n\n\n\n\n\n?par\n\n\n\n\n\nwith(faithful, plot(eruptions, waiting)) ## Make plot appear on screen device\ntitle(main = \"Old Faithful Geyser data\") ## Annotate with a title\n\n\n\n\n\n\nplot(rnorm(100), type=\"l\", col=\"gold\")\n\n\n\nhelp(plot)\n\n\nHelp on topic 'plot' was found in the following packages:\n\n  Package               Library\n  graphics              /Library/Frameworks/R.framework/Versions/4.2/Resources/library\n  base                  /Library/Frameworks/R.framework/Resources/library\n\n\nUsing the first match ...\n\nt=rnorm(100)\nplot(t, type=\"l\", ylim=range(t), lwd=3, col=rgb(1,0,0,0.3))\nlines(t, type=\"s\", lwd=2,col=rgb(0.3,0.4,0.3,0.9))\npoints(t, pch=20, cex=4, col=rgb(0,0,1,0.3))\n\n\n\n\nGráficas con Lattice\nEs un sistema independiente al sistema base, por lo que se tiene que\ncargar la libreria, algunas de sus funciones son\nxyplot\nbwplot\nhistogram\nA diferecnia del sistema base, las gráficas se construyen con una\nsola instrucción. Un ejemplo xyplot(y ~ x | f * g, data)\naqui y depende de x y f, g son\nvariables condicionales para relaizar la grafica, estas son opcionales,\ndata representa el conjunto de datos donde se gráficaran las\nvariables.\n\n\nlibrary(datasets)\nxyplot(Ozone~Wind, data = airquality)\nxyplot(Ozone~Wind, data = airquality,pch = 8,col = \"red\", main = \"Big Apple Data\")\n\n\n\nGráficas con ggplot2\nEs una librería que se puede instalar, la documentación se encuentra\nen Página de ggplo2. Combina los dos\nsistemas anteriores, base y el lattice, la función\nqplot\nSimilar a plot del sistema base, pero sin indicar tanto detalle\nsimilar a como funciona lattice, la otra función que es más versatil es\nggplot\n\n\n#necesitamos importar los datos mpg de la libreria ggplot\n#qplot(displ, hwy, data=mpg, color = drv)\n#qplot(displ, hwy, data=mpg, color = drv, geom = c(\"point\",\"smooth\"))\n#qplot(drv, hwy, data = mpg, geom = \"boxplot\")\n#qplot(drv, hwy, data = mpg, geom = \"boxplot\", color = manufacturer)\n#qplot(displ,hwy, data = mpg, facets = .~drv)\n#qplot(hwy, data = mpg, facets = drv~.,binwidth=2)\n\n\n\nA “grammar” of graphics means that ggplot2 contains building blocks\nwith which you can create your own graphical objects. What are these\nbasic components of ggplot2 plots? There are 7 of them.\nObviously, there’s a DATA FRAME which contains the data you’re trying\nto plot. Then the AESTHETIC MAPPINGS determine how data are mapped to\ncolor, size, etc.The GEOMS (geometric objects) are what you see in the\nplot (points, lines,shapes) and FACETS are the panels used in\nconditional plots. You’ve used these or seen them used in the first\nggplot2 (qplot) lesson.\nThere are 3 more. STATS are statistical transformations such as\nbinning,quantiles, and smoothing which ggplot2 applies to the data.\nSCALES show what coding an aesthetic map uses (for example, male = red,\nfemale = blue). Finally, the plots are depicted on a COORDINATE SYSTEM.\nWhen you use qplot these were taken care of for you.\n\n\n# cargar los mpg de la libreria ggplot2\n#qplot(displ, hwy, data = mpg, geom=c(\"point\",\"smooth\"), facets = .~drv)\n\n#g <- ggplot(mpg, aes(displ,hwy) )\n#g+geom_point()\n#g+geom_point()+geom_smooth()\n#g+geom_point()+geom_smooth(method = \"lm\")\n#g+geom_point()+geom_smooth(method = \"lm\")+facet_grid(.~drv)\n#g+geom_point()+geom_smooth(method = \"lm\")+facet_grid(.~drv)+ggtitle(\"Swirl Rules!\")\n#g+geom_point(color=\"pink\", size=4, alpha=1/2)\n#g+geom_point(size=4, alpha=1/2,aes(color=drv))\n#g+geom_point(aes(color= drv))+labs(title=\"Swirl Rules!\")+labs(x=\"Displacement\", y=\"Hwy Mileage\")\n#g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4,linetype=3,method=\"lm\",se=FALSE)\n#g+geom_point(aes(color=drv))+theme_bw(base_family=\"Times\")\n#plot(myx, myy, type=\"l\", ylim=c(-3,3))\n\n#aqui no plaica nada diecto son datos que se craron\n#g <- ggplot(data = testdat, aes(x=myx,y=myy))\n# g+geom_line()\n#g+geom_line()+ylim(-3,3)#no es lo mejor\n#g+geom_line()+coord_cartesian(ylim=c(-3,3))\n\n#######\n#g <- ggplot(data=mpg, aes(x=displ, y=hwy, color=factor(year)))\n#g+geom_point()\n#g+geom_point()+facet_grid(drv~cyl,margins=TRUE)\n#g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method=\"lm\", se=FALSE,size=2, color=\"black\")\n#g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method=\"lm\", se=FALSE,size=2, color=\"black\")+labs(x=\"Displacement\", y=\"Highway Mileage\", title=\"Swirl Rules!\")\n\n\n\n\n\n#Se tiene que cargar diamonds from ggplot\n#qplot(price, data = diamonds)\n#qplot(price, data = diamonds, binwidth =18497/30, fill=cut)\n#qplot(price, data = diamonds, geom=\"density\")\n#qplot(price, data = diamonds, geom=\"density\", color=cut)\n\n##### Ahora scatterplot\n\n#qplot(carat, price, data = diamonds)\n#qplot(carat, price, data = diamonds, shape=cut)\n#qplot(carat, price, data = diamonds, color=cut)\n#qplot(carat, price, data = diamonds, color=cut)+geom_smooth(method = \"lm\")\n#qplot(carat, price, data = diamonds, color=cut, facets = .~cut)+geom_smooth(method = \"lm\")\n\n###### ahora con ggplot\n\n#g <- ggplot(diamonds, aes(depth, price))\n# g+geom_point(alpha=1/3)\n#cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)\n#diamonds$car2 <- cut(diamonds$carat,cutpoints)\n#g <- ggplot(diamonds, aes(depth, price))\n#g+geom_point(alpha=1/3)+facet_grid(cut~car2)\n#g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = \"lm\", size=3, color=\"pink\")\n#ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)\n\n\n\nLeer y escribir datos\nLeer datos\nread.table, para leer datos tabulares, con los\nigueintes argumento\nfile, el nombre del archivo o conección\nheader, si tiene o no una linea de cabecera\nsep, una cadena que indica como estan separadas als\ncolumnas\ncolClasses, un vector de caracteres indicando la clase de\ncada columna de datos\nnrows, el numero de filas en el conjunto de datos\ncomment.char, vecto de caracters indicando un\ncomentario\nskip, el numero de lineas a omitir desde desde el\nprincipio.\nstringsAsFactors, si las caracteres deben de leerse como\nfactores.\nread.csv, para leer datos tabulares separados por\ncomas\nreadLines, para leer lineas de un archivo de\ntexto.\nsource, para leer códigos de R (inverso a\ndump)\ndget, para leer códigos de R (inverso a dput)\nload, para leer de un worspace guardado\nunserialize, Para leer un objeto de R en forma\nbinaria.\n\n\nif(!file.exists(\"data\")){\n  dir.create(\"data\")  \n}\n# Datos tipo CSV\nfileUrl <- \"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accesType=DOWNLOAD\"\ndownload.file(fileUrl,destfile=\"./data/cameras.csv\", method=\"curl\")\n\n# Datos tipo EXCEL\nfileUrl <- \"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accesType=DOWNLOAD\"\ndownload.file(fileUrl,destfile=\"./data/cameras.xlsx\", method=\"curl\")\n\n\n\n\n\ncameraData <- read.table(\"./data/cameras.csv\", sep=\",\", header = TRUE)\nhead(cameraData)\n#cameraData <- read.csv(\"./data/cameras.csv\")\n#head(cameraData)\n\n\n\n\n\nlibrary(xlsx)\n#cameraData <- read.xlsx(\"./data/cameras.xlsx\", sheetIndex=1, header = TRUE)\n#head(cameraData)\n\n\n\nEscribir datos\nwrite.table\nwriteLines\ndump\ndput\nsave\nseriealize\n\nProgramación\nif-else\n\n\na=4\n  \n  if(a==4){\n  print(\"hola mundo\")\n  }\n  \n  if(a<5){\n  d=3 \n  d\n  }else{\n  d=4\n  d\n  }\n  \n  if (a<2){\n  print(a)\n  } else if (a==5){\n  print(a+3)\n  } else{\n  print(\"Ño\")\n  }\n  \n\n\nfor\nLas instrucciones break y next funcionan igual que\nen otros lenguajes de programcación\n\n\ncontador <- 0  \nc <- runif(1000)\nfor (i in c) {\n  \n  if(i < 0.5)\n  {\n    contador <- contador + 1\n  }\n}\ncontador\n\nfor(i in 1:10) \n{ print(i)}\n\nx<-c(\"a\",\"b\",\"c\")\nfor(variable in x)\n  print(variable)\n\nx <- matrix(1:6, 2, 3)\nx\nfor(i in seq_len(nrow(x))){\n  for(j in seq_len(ncol(x))){\n    if(j == 2) next\n    print(x[i, j])\n  }\n}\n\n\n\nwhile\n\n\ncontador=0\nnumero=1\nwhile(numero<=30){\n  if(numero%%5==0){\n    contador<-contador+1\n  }\n  numero<-numero+1\n}\ncontador\n\n\n\nrepeat\n\n\ncontador<-0\n\nrepeat\n{\n  \n  if(contador==2)\n  {\n    break\n  } \n  else\n  {\n    print(contador)\n    contador<- contador+1\n  }\n  \n}\n\n\n\nFunciones\n\n\ndesv = function(x){\n  sqrt(var(x))\n}\nx<- 1:10 \ndesv(x) \n\nfun1 = function(arg1, arg2=1 )\n{\n  w = arg1 ^ 2\n  return(arg2 + w)\n}\n\nfun1(2)\nfun1(arg1 = 3, arg2 = 5)\n\nfun1(3,5)\n\n\nf <- function(a, b) {\n  a^2\n}\nf(2)\n\n\n\n# ... se ussan para pasar argumentos variables, los argumentos listados despues de ... deben \n# de ser usados con nombre \n\nf = function(...)\n{\n  datos = list(...)\n  medias = lapply(datos,mean)    # lapply aplica una función sobre una lista\n  varianzas = lapply(datos,var)\n  maximos = lapply(datos,max)\n  minimos = lapply(datos,min)\n  \n  for(i in 1:length(datos))\n  {\n    cat(\"Distribución \",i,\": \\n\")   # La función cat es para visualizar cosas\n    cat(\"media: \",medias[[i]],\"varianza: \",varianzas[[i]],\"maximo: \",maximos[[i]],\"minimo: \",minimos[[i]],\"\\n\")\n    cat(\"------------------------------------------------\\n\")\n  }\n  \n}\n\nf(c(1,2),c(1,3,5,7),c(-1,2,-5,6,9))\n\nx = rnorm(100)\ny = runif(50)\nf(x,y)\n\nmake.power <- function(n) {\n  pow <- function(x) {\n    x^n\n  }\n  pow\n}\n\ncube <- make.power(3)\nsquare <- make.power(2)\ncube(3)\nsquare(3)\nls(environment(cube))\n\nzz <- 10\nf <- function(x) {\n  zz <- 2\n  zz^2 + g(x)\n}\ng <- function(x) {\n  x*zz\n}\nf(3)\n\n\n\nPaquetes\ninstall.packages(“ggvis”) library,\nrequire\nsearch() despliega que paquetes están cargado en el\nambiente\nlapply sapply\nlapply toma una lista como entrada, aplica una función a cada\nelemento de la lista, regresa una lista de la misma dimensión que la\noriginal. la “l” es de lista, lapply(lista,func)\nsapply toma una lista como entrada, aplica una función a cada\nelemento de la lista, regresa una “simplificación” (de ser posible, si\nno es como lappy) de la aplicación de la función (respecto al tipo de\ndato que regresa la función) de la misma dimensión que la\noriginal.\n\n\nx <- list(a = 1:5, b = rnorm(10)) \nres <- lapply(x, mean)\nstr(res)\nres <- unlist(res) # se convierte la lista en un vector\nstr(res) \nfuncion1 <- function(a, b) {\n  a*b\n}\nresn <- lapply(x, funcion1, b = 2)\nrens <- lapply(x, function(x){2*x})\nresn\nprint(\"este es sapply\")\nsapply(x, mean)\nx<-1:4\nlapply(x, runif)\nx <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))\nlapply(x, function(elt) elt[,1])\n\n\n\napply mapply\napply es usado para evaluar una función (usialmente anonima) sobre\nlos margenes de un arreglo. NO es más rápida que un ciclo pero es una\nsola linea\n\n\nstr(apply)\nx <- matrix(rnorm(200), 20, 10)\nSumacolumnas = apply(x, 2, sum)\nSumafilas = apply(x, 1, sum)\nSumacolumnas\nSumafilas\napply(x, 1, quantile, probs = c(0.25, 0.75))\n\n\n\nmapply aplica una función recorriendo diferentes valores dados para\nsus argumentos, sirve para hacer vectorización (en el sentido de generar\nun vector a partir de una instrucción)\n\n\nmapply(rep, 1:4, 4:1)  # list(rep(1, 4), rep(2, 3), rep(3, 2), rep(4, 1))\n\n\n[[1]]\n[1] 1 1 1 1\n\n[[2]]\n[1] 2 2 2\n\n[[3]]\n[1] 3 3\n\n[[4]]\n[1] 4\n\nvapply tapply\nvapply permite especificar el formato de salida (por loq ue lleva\ntres argumentos), si el formato de salida especificado no coincide con\nlo que se ha obtenido entonces\ntapply aplica una función a un determinado subconjunto de los\ndatos, diciendo a que indices lo aplicas, por eso lleva tres argumentos\ncomo mínimo.\n\n\nx <- c(rnorm(10), runif(10), rnorm(10, 1))\nx\nf<-gl(3,10)\nf\ntapply(x, f, mean)\ntapply(x, f, range)\n\n\n\nsplit\ntoma objetos y los separa en grupos determinados por un factor o\nlista uan lista de factores\n\n\nx <- c(rnorm(10), runif(10), rnorm(10, 1))\nx\nf<-gl(3,10)\nsplit(x, f)\nlapply(split(x, f), mean)\n\n\n\n\n\nlibrary(datasets)\nhead(airquality)\n\n\n  Ozone Solar.R Wind Temp Month Day\n1    41     190  7.4   67     5   1\n2    36     118  8.0   72     5   2\n3    12     149 12.6   74     5   3\n4    18     313 11.5   62     5   4\n5    NA      NA 14.3   56     5   5\n6    28      NA 14.9   66     5   6\n\ns <- split(airquality, airquality$Month)\nlapply(s, function(x) colMeans(x[, c(\"Ozone\", \"Solar.R\", \"Wind\")]))\n\n\n$`5`\n   Ozone  Solar.R     Wind \n      NA       NA 11.62258 \n\n$`6`\n    Ozone   Solar.R      Wind \n       NA 190.16667  10.26667 \n\n$`7`\n     Ozone    Solar.R       Wind \n        NA 216.483871   8.941935 \n\n$`8`\n   Ozone  Solar.R     Wind \n      NA       NA 8.793548 \n\n$`9`\n   Ozone  Solar.R     Wind \n      NA 167.4333  10.1800 \n\nsapply(s, function(x) colMeans(x[, c(\"Ozone\", \"Solar.R\", \"Wind\")]))\n\n\n               5         6          7        8        9\nOzone         NA        NA         NA       NA       NA\nSolar.R       NA 190.16667 216.483871       NA 167.4333\nWind    11.62258  10.26667   8.941935 8.793548  10.1800\n\nsapply(s, function(x) colMeans(x[, c(\"Ozone\", \"Solar.R\", \"Wind\")], na.rm = TRUE))\n\n\n                5         6          7          8         9\nOzone    23.61538  29.44444  59.115385  59.961538  31.44828\nSolar.R 181.29630 190.16667 216.483871 171.857143 167.43333\nWind     11.62258  10.26667   8.941935   8.793548  10.18000\n\nFechas y tiempo\n\n\nx <- as.Date(\"1970-01-01\")\nx\nunclass(x)\nunclass(as.Date(\"1970-01-02\"))\n\nx <- Sys.time()\nx\np <- as.POSIXlt(x)\nnames(unclass(p))\np$sec\n\nx <- Sys.time()\nx\nunclass(x)\n# x$sec   error\np <- as.POSIXlt(x)\np$sec\n\ndatestring <- c(\"January 10, 2012 10:40\", \"December 9, 2011 9:10\")\nx <- strptime(datestring, \"%B %d, %Y %H:%M\")\nx\n\nx <- as.Date(\"2012-01-01\")\ny <- strptime(\"9 Jan 2011 11:34:21\", \"%d %b %Y %H:%M:%S\")\nx <- as.POSIXlt(x)\nx-y\n\nx <- as.Date(\"2012-03-01\") \ny <- as.Date(\"2012-02-28\")\nx-y\nx <- as.POSIXct(\"2012-10-25 01:00:00\")\ny <- as.POSIXct(\"2012-10-25 06:00:00\", tz = \"GMT\")\ny-x\n\n\n\nLeer Datos\nLeer Bases de datos con\nMySQL\ninstalar MySQl Mac os,\ndescargar datos de la universida de califiornia enlace\n\n\ninstall.packages(\"RMySQL\")\n\n\n\n\n\nlibrary(DBI)\nlibrary(RMySQL)\n\n\n\n\n\nucscDb <- dbConnect(MySQL(), user=\"genome\",\n                    host=\"genome-mysql.cse.ucsc.edu\")\nresult <- dbGetQuery(ucscDb, \"show databases;\")\ndbDisconnect(ucscDb)\n\n\n[1] TRUE\n\nresult\n\n\n              Database\n1              acaChl1\n2              ailMel1\n3              allMis1\n4              allSin1\n5              amaVit1\n6              anaPla1\n7              ancCey1\n8              angJap1\n9              anoCar1\n10             anoCar2\n11             anoGam1\n12             anoGam3\n13             apaSpi1\n14             apaVit1\n15             apiMel1\n16             apiMel2\n17             aplCal1\n18             aptFor1\n19             aptMan1\n20             aquChr2\n21             araMac1\n22             ascSuu1\n23             balAcu1\n24             balPav1\n25             bisBis1\n26             bosTau2\n27             bosTau3\n28             bosTau4\n29             bosTau5\n30             bosTau6\n31             bosTau7\n32             bosTau8\n33             bosTau9\n34           bosTauMd3\n35             braFlo1\n36             bruMal2\n37             bucRhi1\n38             burXyl1\n39             caeAng2\n40             caeJap1\n41             caeJap4\n42              caePb1\n43              caePb2\n44              caePb3\n45             caeRem2\n46             caeRem3\n47             caeRem4\n48            caeSp111\n49             caeSp51\n50             calAnn1\n51             calJac1\n52             calJac3\n53             calJac4\n54             calMil1\n55             canFam1\n56             canFam2\n57             canFam3\n58             canFam4\n59             canFam5\n60             canFam6\n61             capCar1\n62             carCri1\n63             cavPor3\n64                 cb1\n65                 cb3\n66                 cb4\n67                ce10\n68                ce11\n69                 ce2\n70                 ce4\n71                 ce6\n72             cerSim1\n73             chaVoc2\n74             cheMyd1\n75             chlSab2\n76             chlUnd1\n77             choHof1\n78             chrPic1\n79             chrPic2\n80                 ci1\n81                 ci2\n82                 ci3\n83             colLiv1\n84             colStr1\n85             corBra1\n86             corCor1\n87             cotJap2\n88             criGri1\n89         criGriChoV1\n90         criGriChoV2\n91             cucCan1\n92             danRer1\n93            danRer10\n94            danRer11\n95             danRer2\n96             danRer3\n97             danRer4\n98             danRer5\n99             danRer6\n100            danRer7\n101            dasNov3\n102            dipOrd1\n103            dirImm1\n104                dm1\n105                dm2\n106                dm3\n107                dm6\n108                dp2\n109                dp3\n110            droAna1\n111            droAna2\n112            droEre1\n113            droGri1\n114            droMoj1\n115            droMoj2\n116            droPer1\n117            droSec1\n118            droSim1\n119            droSim2\n120            droVir1\n121            droVir2\n122            droYak1\n123            droYak2\n124            eboVir3\n125            echTel1\n126            echTel2\n127            egrGar1\n128         enhLutNer1\n129            equCab1\n130            equCab2\n131            equCab3\n132            eriEur1\n133            eriEur2\n134            eurHel1\n135            falChe1\n136            falPer1\n137            felCat3\n138            felCat4\n139            felCat5\n140            felCat8\n141            felCat9\n142            ficAlb2\n143                fr1\n144                fr2\n145                fr3\n146            fulGla1\n147            gadMor1\n148            galGal2\n149            galGal3\n150            galGal4\n151            galGal5\n152            galGal6\n153            galVar1\n154            gasAcu1\n155            gavSte1\n156             gbMeta\n157            geoFor1\n158                 go\n159           go080130\n160           go140213\n161           go150121\n162           go180426\n163            gorGor3\n164            gorGor4\n165            gorGor5\n166            gorGor6\n167            haeCon2\n168            halAlb1\n169            halLeu1\n170            hetBac1\n171            hetGla1\n172            hetGla2\n173               hg16\n174               hg17\n175               hg18\n176               hg19\n177        hg19Patch10\n178        hg19Patch13\n179               hg38\n180        hg38Patch11\n181            hgFixed\n182          hgcentral\n183 information_schema\n184            latCha1\n185            lepDis1\n186            letCam1\n187            loaLoa1\n188            loxAfr3\n189            macEug1\n190            macEug2\n191            macFas5\n192            manPen1\n193            melGal1\n194            melGal5\n195            melHap1\n196            melInc2\n197            melUnd1\n198            merNub1\n199            mesUni1\n200            micMur1\n201            micMur2\n202               mm10\n203               mm39\n204                mm5\n205                mm6\n206                mm7\n207                mm8\n208                mm9\n209            monDom1\n210            monDom4\n211            monDom5\n212            musFur1\n213            myoLuc2\n214            nanPar1\n215            nasLar1\n216            necAme1\n217            neoSch1\n218            nipNip1\n219            nomLeu1\n220            nomLeu2\n221            nomLeu3\n222            ochPri2\n223            ochPri3\n224            oncVol1\n225            opiHoa1\n226            oreNil1\n227            oreNil2\n228            oreNil3\n229            ornAna1\n230            ornAna2\n231            oryCun2\n232            oryLat2\n233            otoGar3\n234            oviAri1\n235            oviAri3\n236            oviAri4\n237            panPan1\n238            panPan2\n239            panPan3\n240            panRed1\n241            panTro1\n242            panTro2\n243            panTro3\n244            panTro4\n245            panTro5\n246            panTro6\n247            papAnu2\n248            papAnu4\n249            papHam1\n250            pelCri1\n251            pelSin1\n252 performance_schema\n253            petMar1\n254            petMar2\n255            petMar3\n256            phaCar1\n257            phaLep1\n258            phoRub1\n259            picPub1\n260            ponAbe2\n261            ponAbe3\n262            priExs1\n263            priPac1\n264            priPac3\n265            proCap1\n266     proteins120806\n267     proteins121210\n268     proteins140122\n269     proteins150225\n270     proteins160229\n271     proteins180404\n272           proteome\n273            pteGut1\n274            pteVam1\n275            pygAde1\n276            pytBiv1\n277            rheMac1\n278           rheMac10\n279            rheMac2\n280            rheMac3\n281            rheMac8\n282            rhiRox1\n283                rn3\n284                rn4\n285                rn5\n286                rn6\n287                rn7\n288            sacCer1\n289            sacCer2\n290            sacCer3\n291            saiBol1\n292            sarHar1\n293            serCan1\n294            sorAra1\n295            sorAra2\n296           sp120323\n297           sp121210\n298           sp140122\n299           sp150225\n300           sp160229\n301           sp180404\n302            speTri2\n303            strCam1\n304            strPur1\n305            strPur2\n306            strRat2\n307           susScr11\n308            susScr2\n309            susScr3\n310                sys\n311            taeGut1\n312            taeGut2\n313            tarSyr1\n314            tarSyr2\n315            tauEry1\n316            tetNig1\n317            tetNig2\n318            thaSir1\n319            tinGut2\n320            triMan1\n321            triSpi1\n322            triSui1\n323            tupBel1\n324            turTru2\n325            tytAlb1\n326            uniProt\n327            vicPac1\n328            vicPac2\n329           visiGene\n330            wuhCor1\n331            xenLae2\n332            xenTro1\n333           xenTro10\n334            xenTro2\n335            xenTro3\n336            xenTro7\n337            xenTro9\n338            zonAlb1\n\n\n\nhg19 <- dbConnect(MySQL(), user=\"genome\", db=\"hg19\",\n                  host=\"genome-mysql.cse.ucsc.edu\") #Una base dedatos del genoma humano 19\nallTables <- dbListTables(hg19)\nlength(allTables)# la cantidad total de tablas\n\n\n[1] 12571\n\n\n\nallTables[1:5]\n\n\n[1] \"HInv\"         \"HInvGeneMrna\" \"acembly\"      \"acemblyClass\"\n[5] \"acemblyPep\"  \n\n\n\ndbListFields(hg19,\"affyU133Plus2\")#las columnas de esta tabla\n\n\n [1] \"bin\"         \"matches\"     \"misMatches\"  \"repMatches\" \n [5] \"nCount\"      \"qNumInsert\"  \"qBaseInsert\" \"tNumInsert\" \n [9] \"tBaseInsert\" \"strand\"      \"qName\"       \"qSize\"      \n[13] \"qStart\"      \"qEnd\"        \"tName\"       \"tSize\"      \n[17] \"tStart\"      \"tEnd\"        \"blockCount\"  \"blockSizes\" \n[21] \"qStarts\"     \"tStarts\"    \n\n\n\ndbGetQuery(hg19, \"select count(*) from affyU133Plus2\") # es un comando de Querry para saber cuantas filas tiene la tabla\n\n\n  count(*)\n1    58463\n\n\n\naffyData <- dbReadTable(hg19, \"affyU133Plus2\")# se lee esta tabla y se muetran los primeros datos\nhead(affyData)\n\n\n  bin matches misMatches repMatches nCount qNumInsert qBaseInsert\n1 585     530          4          0     23          3          41\n2 585    3355         17          0    109          9          67\n3 585    4156         14          0     83         16          18\n4 585    4667          9          0     68         21          42\n5 585    5180         14          0    167         10          38\n6 585     468          5          0     14          0           0\n  tNumInsert tBaseInsert strand        qName qSize qStart qEnd tName\n1          3         898      -  225995_x_at   637      5  603  chr1\n2          9       11621      -  225035_x_at  3635      0 3548  chr1\n3          2          93      -  226340_x_at  4318      3 4274  chr1\n4          3        5743      - 1557034_s_at  4834     48 4834  chr1\n5          1          29      -    231811_at  5399      0 5399  chr1\n6          0           0      -    236841_at   487      0  487  chr1\n      tSize tStart  tEnd blockCount\n1 249250621  14361 15816          5\n2 249250621  14381 29483         17\n3 249250621  14399 18745         18\n4 249250621  14406 24893         23\n5 249250621  19688 25078         11\n6 249250621  27542 28029          1\n                                                                  blockSizes\n1                                                          93,144,229,70,21,\n2              73,375,71,165,303,360,198,661,201,1,260,250,74,73,98,155,163,\n3                 690,10,32,33,376,4,5,15,5,11,7,41,277,859,141,51,443,1253,\n4 99,352,286,24,49,14,6,5,8,149,14,44,98,12,10,355,837,59,8,1500,133,624,58,\n5                                       131,26,1300,6,4,11,4,7,358,3359,155,\n6                                                                       487,\n                                                                                                 qStarts\n1                                                                                    34,132,278,541,611,\n2                        87,165,540,647,818,1123,1484,1682,2343,2545,2546,2808,3058,3133,3206,3317,3472,\n3                   44,735,746,779,813,1190,1195,1201,1217,1223,1235,1243,1285,1564,2423,2565,2617,3062,\n4 0,99,452,739,764,814,829,836,842,851,1001,1016,1061,1160,1173,1184,1540,2381,2441,2450,3951,4103,4728,\n5                                                     0,132,159,1460,1467,1472,1484,1489,1497,1856,5244,\n6                                                                                                     0,\n                                                                                                                                     tStarts\n1                                                                                                             14361,14454,14599,14968,15795,\n2                                     14381,14454,14969,15075,15240,15543,15903,16104,16853,17054,17232,17492,17914,17988,18267,24736,29320,\n3                               14399,15089,15099,15131,15164,15540,15544,15549,15564,15569,15580,15587,15628,15906,16857,16998,17049,17492,\n4 14406,20227,20579,20865,20889,20938,20952,20958,20963,20971,21120,21134,21178,21276,21288,21298,21653,22492,22551,22559,24059,24211,24835,\n5                                                                         19688,19819,19845,21145,21151,21155,21166,21170,21177,21535,24923,\n6                                                                                                                                     27542,\n\n\n\nquery <- dbSendQuery(hg19, \"select * from affyU133Plus2 where misMatches between 1 and 3\")\naffyMis <- fetch(query)\nquantile(affyMis$misMatches)\n\n\n  0%  25%  50%  75% 100% \n   1    1    2    2    3 \n\n\n\naffyMisSmall <- fetch(query, n=10)\ndbClearResult(query)\n\n\n[1] TRUE\n\n\n\ndim(affyMisSmall)\n\n\n[1] 10 22\n\ndbDisconnect(hg19)\n\n\n[1] TRUE\n\nLeer datos y escribir con\nHDF5\nLeer datos de páginas\nweb (el código HTML)\nLeer\ndatos de API’s (Application programmming Interface, ejemplo\nTwitter)\nLeer\notro tipo de datos (imagenes, musica, archivos de otrso programs: SAS,\nExcel)\n\n\n\n",
      "last_modified": "2022-07-24T17:43:42-05:00"
    },
    {
      "path": "SeriesTiempo.html",
      "title": "Series de tiempo",
      "description": "3.1: \n\n3.1.3: \n\nPortafolio de R\n",
      "author": [
        {
          "name": {},
          "url": "https://rafneta.github.io/"
        }
      ],
      "date": "May 4, 2022",
      "contents": "\n\nContents\nSeries de\ntiempo\nRevisión\nprevia\nSerie de tiempo\nestacionaria\nModelos ARMA(\\(p\\),\\(q\\))\nSerie de tiempo no\nestacionaria\nTransformaciones de\nseries no estacionarias\nModelos\nARIMA(\\(p,d,q\\))\nEstimación del\nmodelo de un serie de tiempo\nPredicción de una serie de\ntiempo\n\nSeries de tiempo\nEs suficiente pensar (por le momento) a una serie de tiempo como\nmediciones (contradominio) de una variable conforme transcurre el tiempo\n(dominio)\nEn el paquete datasets se encuentra el conjunto de datos\nAirPassengers. Investiga de que trata este conjunto\n\n\n?AirPassengers \n\n\n\nCargamos el conjunto de datos.\n\n\ndata(AirPassengers)\nAP <- AirPassengers\nAP\n\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n1949 112 118 132 129 121 135 148 148 136 119 104 118\n1950 115 126 141 135 125 149 170 170 158 133 114 140\n1951 145 150 178 163 172 178 199 199 184 162 146 166\n1952 171 180 193 181 183 218 230 242 209 191 172 194\n1953 196 196 236 235 229 243 264 272 237 211 180 201\n1954 204 188 235 227 234 264 302 293 259 229 203 229\n1955 242 233 267 269 270 315 364 347 312 274 237 278\n1956 284 277 317 313 318 374 413 405 355 306 271 306\n1957 315 301 356 348 355 422 465 467 404 347 305 336\n1958 340 318 362 348 363 435 491 505 404 359 310 337\n1959 360 342 406 396 420 472 548 559 463 407 362 405\n1960 417 391 419 461 472 535 622 606 508 461 390 432\n\nVemos con que tipo de variable trabajamos\n\n\nclass(AP)\n\n\n[1] \"ts\"\n\nEsto siempre es una buena práctica, para saber que podemos o no\nhacer.\nSi consultamos la ayuda de ts podemos tener accesso a la\nsiguiente referencia (CRAN task view) sobre\nSeries de\ntiempo en R\nPara ver el contenido del paquete stats (Help >> home\n>> packages)\n\n\nlibrary(help = \"stats\")\n\n\n\nAhí se puede investigar sobre todas las funciones.\nLa gráfica matemática de la variable AP sería.\n\n\nplot(AP, ylab = \"Pasajeros (miles)\", type = \"p\")\n\n\n\n\nLa gráfica en series de tiempo se acostumbra como\n\n\nplot(AP, ylab = \"Pasajeros (miles)\")\n\n\n\n\nSe pueden identificar algunas componentes en una serie de tiempo\nTendencia (Trend). Un cambio sistematico que no parce periodico\nEstacionalidad (Season). Un patrón repetido (depende de la unidad,\npodría ser anual)\nCiclos (cycles). Repeticiones que no corresponden a algo fijo\nAleatoriedad (stochastic). Cambios aleaorios\nValores atípicos (Outliers). Mediciones muy alejadas del\npromedio\nValores erroneos. Datos no disponibles.\n\n\nplot(aggregate(AP))\n\n\n\nboxplot(AP ~ cycle(AP))\n\n\n\n\nRevisión previa\n\nDefinición [Proceso Estocástico Discreto\n(PED)]\n\nEs una colección de variables aleatorias\n\\[\\left\\{ X_t:t\\in T\\right\\}\\]\ndonde \\(T\\) es un conjunto numerable,\n\\(X_t\\in S\\), \\(S\\) es llamado el espacio de estados.\n\n\nUn PED \\(\\{X_t\\}\\)1\npuede considerarse como una función de dos variables \\[X:T\\times \\Omega\\longrightarrow S\\]\nPara cada \\(\\omega\\in\\Omega\\) fijo,\nla función \\(t\\rightarrow X_t(\\Omega)\\)\nes llamada una realización del proceso (Rincón\n2016).\n\nDefinición [Serie de tiempo ]\n\nEs una realización de un Proceso Estocástico Discreto\n\\[\\left\\{ X_t:t\\in T\\right\\}\\]\ndonde \\(T\\) es un conjunto ordenado\ncronológicamente cuyos elementos son equidistantes\n\n\n\n\n\nFigure 1: Trayectoria para \\(t=n={0,1,2,...}\\)\n\n\n\nSerie de tiempo estacionaria\nUn PED \\(\\{X_t\\}\\) es\nestrictamente estacionario si y sólo si para\ncualesquiera \\(t_1 < t_2 < \\dots <\nt_n\\) \\(n\\geq1\\), la\ndistribución de probabilidad conjunta de \\([X_{t_1},\\dots,X_{t_n}]\\) coincide con la\nde \\([X_{t_1+h},\\dots,X_{t_n+h}]\\) para\n\\(h\\in\\mathbb{Z}-\\{0\\}\\)\nUn PED \\(\\{X_t\\}\\) es\nestacionario en media o débilmente estacionario\nde primer orden si y solo si \\(\\mathbb{E}(X_t)<\\infty\\) es\nconstante\nUn PED \\(\\{X_t\\}\\) es\nestacionario en autocovarianza o débilmente\nestacionario de segundo orden si y solo si:\n\\(\\mathbb{E}(X_t)<\\infty\\) y\n\\(\\mathbb{V}ar(X_t)<\\infty\\) son\nconstantes y finitas, es decir, no hay dependencia de \\(t\\)\n\\(\\mathbb{C}ov(X_t,X_{t-k})\\) a lo\nsumo de pende de \\(k\\) pero no depende\nde \\(t\\)\npara trabajar con series de tiempo se pide normalmente que se suponga\nque la serie es debilmente estacionaria de segundo\norden. Por el momento no se realiza esta prueba a los datos de\nCoVID, en secciones posteriores regresamos a esta pregunta. Por el\nmomento se supondrá \\(\\{C_t\\}\\) es\nestacionaria.\n¿Existe una relación entre \\(C_t\\) y\n\\(C_{t-1},C_{t-2},\\dots,C_{t-k},\\)?, la\nfunción de autorrelación representa la duración y la intensidad\nde la memoria de un proceso, podría decirse que es una medida de qué\ntanto afectan los valores pasados a los actuales.\nLa autocovarianza de orden \\(k\\), de un PED \\(\\{X_t\\}\\) estacionario se define\ncomo\n\\[\\gamma_k=\\mathbb{C}ov(X_t,X_{t+k})\\]\nLa autocorrelación simple de orden k, de un PED\n\\(\\{X_t\\}\\) estacionario se\ndefine como\n\\[\\rho_k=\\frac{\\gamma_k}{\\gamma_0};\\;\\;\nk=0,1\\dots\\]\nLa función \\(k\\rightarrow\\rho_k\\) es\nllamada la función de autocorrelación (ACF), el dominio de la\nfunción se deduce a partir del supuesto de estacionariedad,\nesta función nos da la relación entre entre \\(X_t\\) y \\(X_{t-k}\\).\nEn la práctica se tienen que utilizar estimadores, el valor numérico\npara el estimador \\(\\hat\\rho_k\\) es\n\\[r_{k} = \\frac{\\sum\\limits_{t=k+1}^T\n(x_{t}-\\bar{x})(x_{t-k}-\\bar{x})}\n{\\sum\\limits_{t=1}^T (x_{t}-\\bar{x})^2}\\]\ndonde \\(x_t\\) es el valor observado\nde \\(X_t\\), \\(T\\) denota el número de datos. Cada valor\nse considera individualmente significativo al \\(5%\\) cuando \\(r_k>1.96/\\sqrt{T}\\). Si se quiere hacer\nuna prueba conjunta de significancia de las \\(K\\) primeras autocorrelaciones usualmente\nse calcula el estadístico de Ljuang-Box que\naproximadamente sigue una distribución \\(~\\chi^2(K)\\)\n\\[Q_{LB}=T(T-2)\\sum_{k=1}^{K}\\frac{r_k^2}{T-k}\\]\nla hipótesis nula es \\(\\rho_1=\\ldots\\rho_K=0\\).\nExiste una medida del grado de asociación lineal entre dos\ncomponentes de \\(\\{X_t\\}\\) que descarta\nque dicha asociación suceda por los componentes intermedios entre ellos,\nprecisando:\nLa autocorrelación parcial de orden \\(k\\) de un PED \\(\\{X_t\\}\\) estacionario se define\ncomo el parámetro \\(\\phi_{kk}\\) de la\nregresión\n\\[\\begin{equation}\n\\tilde{X}_t=\\phi_{k1}\\tilde{X}_{t-1}+\\phi_{k2}\\tilde{X}_{t-2}+\\dots+\\phi_{kk}\\tilde{X}_{t-k}+\nU_t\n\\tag{1}\n\\end{equation}\\]\ncon \\(\\tilde{X}_{t-i}=X_{t-i}-\\mu_X\\), \\(i = 0,\\dots,k\\), \\(U_t\\) independiente de \\(Y_{t-i}\\) para todo \\(i\\geq 1\\), la función \\(k\\rightarrow\\phi_{kk}\\) suele llamarse\nfunción de autocorrelación parcial (PACF) del proceso.\nExisten por lo menos dos formas de estimar esta cantidad, solo se\nmenciona una de ellas que es realizar la regresión que indica la\necuación (1), cada estimación puede considerarse\nindividualmente significativa al \\(5\\%\\) cuando \\(\\phi_{kk}>1.96/\\sqrt{T}\\).\nLa ACF se puede calcular para series no estacionarias, cuando la\nserie no es estacionaria la ACF decrece muy lento. Hasta el\nmomento se ha supuesto que \\(\\{C_t\\}\\)\nes estacionaria, ¿qué tanto se puede sostener esta hipótesis al observar\nsu correlograma?, todo depende de la interpretación de muy\nlento, se sigue sosteniendo la hipótesis de estacionariedad.\nModelos ARMA(\\(p\\),\\(q\\))\nUn proceso estocástico estacionario \\(\\{X_t\\}\\) sigue un modelo\nautorregresivo-media móvil de orden \\((p,q)\\) o ARMA(\\(p,q\\)), si y sólo si\n\\[X_t=\\mu+\\sum_{i=1}^p\\phi_iX_{t-i}-\\sum_{j=1}^q\\theta_jA_{t-j}+A_t\\]\npara \\(t\\in\\mathbb{Z}\\), donde \\(\\{A_t\\}\\sim NIID(0,\\sigma_A^2)\\), \\(\\mu\\), \\(\\phi_i\\) y \\(\\theta_j\\) son parametros.\npara la condición de estacionariedad se tiene que\nlas soluciones de la siguiente ecuación están fuera del círculo\nunitario\n\\[1-\\sum_{i=1}^p\\phi_ix^i=0\\] se\ndice que el modelo es invertible si las soluciones de\nla siguente ecuación están fuera del círculo unitario\n\\[1-\\sum_{j=1}^q\\theta_jx^j=0\\]\nCuando los parámetros \\(\\theta_j\\)\nson nulos se dice que el proceso sigue un modelo AR(\\(p\\))=ARMA(\\(p,0\\)), si los parámetros \\(\\phi_i\\) son nulos se dice que el proceso\nsigue un modelo MA(\\(q\\))=ARMA(\\(0,q\\))\nLos procesos estacionarios ARMA(\\(p,q\\)) se caracterizan por el\ncomportamiento conjunto de su ACF y PACF, en la Figura\n?? se muestra el comportamiento, la tabla se se tomó del\nsiguiente enlace\n\n\n\nFigure 2: Tabla de ACF y PACF\n\n\n\nSi se revisan las gráficas de ACF y PACF para \\(\\{C_t\\}\\) entonces probablemente la\nvariable \\(C_t\\) se pueda escribir como\nun modelo autorregresivo de orden \\(p\\), AR(p), es decir\n\\[C_t=\\beta_0+\\beta_1\nC_{t-1}+\\beta_{t-2}C_{t-2}+\\dots+\\beta_{t-p}C_{t-p}+U_t\\]\nsuponiendo \\(\\mathbb{E}(U_t|C_{t-1},C_{t-2},\\dots)=0\\).\nCon base en los resultados obtenidos de autocorrelación se realizan las\nregresiones para 1, 2 y 3 retardos.\nSerie de tiempo no\nestacionaria\nSi la serie presenta una raíz unitaria (y con esto\nes no estacionaria), es decir, \\(z=1\\) es una solución de la ecuación\n\\[1-\\beta_1z-\\beta_2z^2-\\dots+\\beta_pz^p=0\\]\nentonces la serie presenta una tendencia estocástica, lo que implica que\nlos coeficientes y los estadísticos \\(t\\) de las regresiones previamente\nrealizados no tienen buenas características (los coeficientes\nson sesgados y el estadístico no se distribuye de forma normal). Para\nrevisar si es el caso, se realiza el contraste de Dickey-Fuller\naumentado (Stock and Watson\n2012), para ello se estima el siguiente modelo 2\n\\[\\begin{equation}\n\\Delta C_t=\\beta_0+\\delta C_{t-1} + \\gamma_1\\Delta C_{t-1}+\\gamma_2 C\n_{t-2}+\\dots+\\gamma_p \\Delta C_{t-p+1}+u_t\n\\tag{2}\n\\end{equation}\\]\ndonde \\[H_0:\\delta=0\\;\\;\\text{vs}\\;\\;H_1:\\delta<0\n\\]\nbajo la hipótesis nula, \\(C_t\\)\ntiene tendencia estocástica, bajo la hipótesis alternativa, \\(C_t\\) es estacionaria.\nPara calcular esta regresión se tiene que proponer un orden \\(p\\) 3, la instrucción\nurca::ur.df nos proporciona un criterio de selección y nos\npermite configurar la regresión como en la ecuación (2)\nTransformaciones de\nseries no estacionarias\nAlgunos series no estacionarias se pueden transformar para\nconvertirlas en series estacionarias. Normalmente se tienen dos\ntransformaciones:\nTransformación de Box-Cox para estabilizar la dispersión, es decir,\nobtener estacionariedad en la varianza\n\\[w_t=\\begin{cases}\nlog(x_t)&\\lambda=0\\\\\n&\\\\\n\\frac{x_t^\\lambda-1}{\\lambda}&\\lambda\\neq 0\n\\end{cases}\\]\nAplicar diferencias es los datos para estabilizar el nivel; es\ndecir, obtener estacionariedad en media\nSe recomienda trabajar con las diferencias de \\(C_t\\) (Stock and\nWatson 2012)-(Wooldridge 2010)-(Holmes, M. D, and Ward 2020), es decir,\ncon \\(\\Delta C_t=C_t-C_{t-1}\\) o con\nlas segundas diferencias \\(\\Delta^2\nC_t=C_t-2C_{t-1}+C_{t-2}\\), de tal forma que al aplicar la preba\nde Dickey-Fuller a la serie resultante se rechaze la hipétesis nula en\nfavor de una serie estacionaria.\nExisten varias formas de abordar este problema, se ha elegido\nutilizar la instrucción forecast::ndiffs que calcula la\ncantidad de diferencias necesarias, una vez que se tiene este número se\naplica la prueba mencionada para verificar dicha situación.\nModelos ARIMA(\\(p,d,q\\))\nSe definen algunos conceptos para escribir la definición del\nmodelo\nEl operador de retardo se define como\n\\[B^dX_t=X_{t-d};\\;\\;d\\in\\mathbb{N}\\]\nEl operador de diferencia se define como\n\\[\\Delta^dX_t=(1-B)^dX_t;\\;\\;d\\in\\mathbb{N}\\]\nUn proceso estocástico \\(\\{X_t\\}\\)\nes integrado de orden \\(d\\), \\(d\\in\\mathbb{N}\\), si y sólo si el proceso\n\\(\\{\\Delta^d X_t\\}\\) sigue un modelo\nARMA(\\(p,q\\))\nestacionario e invertible.\nUn proceso estocástico \\(\\{X_t\\}\\)\nes integrado de orden \\(d\\) si y sólo\nsi \\(\\{X_t\\}\\) sigue un modelo\nautorregresivo-integrado-media móvil de orden \\((p,d,q)\\), o ARIMA(\\(p,d,q\\)) del tipo\n\\[\\phi(B)\\Delta^dX_t=\\mu+\\theta(B)A_t\\]\ndonde \\(\\{A_t\\}\\sim\nNIID(0,\\sigma_A^2)\\), \\(\\mu\\),\n\\(\\phi_i\\) y \\(\\theta_j\\) son parámetros y\n\\[1-\\sum_{i=1}^p\\phi_ix^i=\\phi(x)\\]\n\\[1-\\sum_{j=1}^q\\theta_jx^j=\\theta(x)\\]\nSiguiendo las definiciones se puede decir que un proceso \\(\\{X_t\\}\\) que sigue un modelo\nARIMA(\\(p,d,q\\))\nequivale a que el proceso estacionario \\(\\{\\Delta^d X_t\\}\\) siga un modelo\nARMA(\\(p,q\\))\nEstimación del\nmodelo de un serie de tiempo\nSe estima el modelo ARIMA(\\(p,d,q\\)) para \\(\\{C_t\\}\\) se utilizan las herramientas\nprediseñadas en R, en específico forecast::auto.arima, que\ntiene las siguientes características\nSe estima el modelo con la estructura \\(\\phi(B)(\\Delta^dX_t-\\mu_1)=(1+\\sum_{j=1}^q\\theta_jB^j)A_t\\)\nPara elegir al mejor modelo se prefiere utilizar el criterio de\ninformación de Akaike corregido\nSe utiliza el método MLE (Maximum likelihood estimation) para\nencontrar los parámetros\nTeniendo esto en cuenta, se obtiene el modelo ARIMA(\\(0,2,1\\)), que coincide con lo\nobtenido en la ecuación (??)\nPredicción de una serie de\ntiempo\nPara las predicciones se toma el modelo (??) y se evalua\nen \\(t+h|T\\), es decir, se estimará\n\\(\\hat C_{t+h|T}\\) sujeto a que se\nconoce hasta el dato \\(T\\)-ésimo, para\ncada valor entero de \\(h\\geq1\\) se\nobtendrá una predicción, la estimación debe ser en orden, pues si no se\ntiene el dato \\(C_t\\) para un\ndeterminado tiempo este debe ser sustituido por su estimado previamente\nobtenido. Lo usual es remplazar \\(A_t\\)\npata \\(t\\geq T+1\\) con \\(0\\). El modelo de predicción queda como\n\\[\\begin{align}\n\\hat W_{t+h|T}=2W_{t+h-1|T}-W_{t+h-2|T}-0.5860A_{t+h-1|T}+A_{t+h|T}\n\\notag \\\\\n\\hat C_{t+h|T}=(\\lambda W_{t+h|T}+1)^{1/\\lambda}\n\\tag{3}\n\\end{align}\\]\nCada predicción tiene asociada un intervalo de confianza (Hyndman and Athanasopoulos 2018), en\nparticular el intervalo de confianza para la primer estimación \\(\\hat W_{t+1|T}\\) es \\(\\hat W_{t+1|T}\\pm 1.96\\hat\\sigma_A\\). La\nFigura ?? muestra la predicción y dos intervalos con\nnivel de confianza diferente.\n\n\n\nHolmes, E. E., Scheuerell M. D, and E. J. Ward. 2020. Applied Time\nSeries Analysis for Fisheries and Enviromental Data. Northwet\nFisheries Science Center, 2275, Montlake BlvdE., Seatle, WA 98112. https://nwfsc-timeseries.github.io/atsa-labs/.\n\n\nHyndman, Rob J, and George Athanasopoulos. 2018. Forecasting:\nPrinciples and Practice. 2nd ed. Melbourn, Australia: OTexts. https://otexts.com/fpp2/.\n\n\nRincón, Luis. 2016. Introducción a Los Procesos Estocásticos.\n1st ed. México: UNAM, Facultad de Ciencias. https://lya.fciencias.unam.mx/lars/Publicaciones/procesos2012.pdf.\n\n\nStock, James H., and Mark M. Watson. 2012. Introducción a La\nEconometría. 3rd ed. Melbourn, Australia: PEARSON.\n\n\nWooldridge, Jeffrey M. 2010. Introducción a La Econometría. 4th\ned. México: CENGAGE.\n\n\npara no saturar la notación se estará\nutilizando \\(\\{X_t\\}\\) para referirse\naun proceso estocástico discreto↩︎\nsegun (Stock and\nWatson 2012) hay un subindice de más pero segun esta prueba que parece\ncorrecta hay un subindice de menos↩︎\nnormalmente se elige de tal forma que\nlos residuales de la regresión sean ruido blanco↩︎\n",
      "last_modified": "2022-07-24T17:43:59-05:00"
    },
    {
      "path": "SisDis.html",
      "title": "Sistemas discretos",
      "author": [
        {
          "name": {},
          "url": "https://rafneta.github.io/"
        }
      ],
      "date": "May 4, 2022",
      "contents": "\n\nContents\nFunciones en tiempo discreto\nGráficas de funciones\nen tiempo discreto\nTraslación horizontal\nTraslación vertical\nFunciones\ntrigonométricas en tiempo discreto\nHeaviside y delta de\nKronecker\n\nEcuaciones en diferencias\nlineales\nTranformada \\(\\mathscr{Z}\\)\nSistemas en diferencias\n\n\nFunciones en tiempo discreto\n\n\nCargamos bibliotecas.\n\n\nlibrary(ggplot2)\nlibrary(plotly)\n\n\n\nGráficas de funciones\nen tiempo discreto\n\n\nn <- -2:4\n\nfun1 <- function(n){\n  return(0.5^n)\n}\n\nf <- fun1(n)\n\ntabulacion <- data.frame(x = n, y = f)\nDT::datatable(tabulacion)\n\n\n\n{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"],[-2,-1,0,1,2,3,4],[4,2,1,0.5,0.25,0.125,0.0625]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>x<\\/th>\\n      <th>y<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\n\n\nplot(n,f, type = \"p\",col = \"#004A97\",\n     main = \"Gráfica en matemáticas\",\n     xlab = \"n\",\n     ylab = \"f(n)\")\n\n\n\n\n\n\nplot(n,f, type = \"p\", col = \"#004A97\",\n     main = \"Gráfica en ingeniería\",\n     xlab = \"n\",\n     ylab = \"f(n)\")\nlines(n,f, type = \"h\", col = \"#004A97\")\n\n\n\n\n\n\nplot(n,f, type = \"l\", col = \"#004A97\",\n     main = \"Gráfica en series de tiempo\",\n     xlab = \"n\",\n     ylab = \"f(n)\")\n\n\n\n\n\n\nggplot(tabulacion,aes(x)) + geom_line(aes(y=y), colour=\"#004A97\") + \n  labs(title = \"Gráfica de la función en Series de tiempo\",\n       subtitle = \"con ggplot2\",\n       y = \"f(n)\",\n       x = \"n \")\n\n\n\n\n\n\nplot_ly(data = tabulacion, \n        x = ~x, \n        y = ~y, \n        type = 'scatter', \n        mode = 'lines') %>% \n  layout(title = \"Gráfica de la función en series de tiempo\",\n         xaxis =  list(title =\"n\"),\n         yaxis =  list(title = \"f(n)\"))\n\n\n\n{\"x\":{\"visdat\":{\"f3375c81fd4b\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"f3375c81fd4b\",\"attrs\":{\"f3375c81fd4b\":{\"x\":{},\"y\":{},\"mode\":\"lines\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Gráfica de la función en series de tiempo\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"n\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"f(n)\"},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-2,-1,0,1,2,3,4],\"y\":[4,2,1,0.5,0.25,0.125,0.0625],\"mode\":\"lines\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\nTraslación horizontal\n\n\nn <- -2:4\nn1 <- n+1\nnm1 <- n-1 \n\nf <- fun1(n) \n\n\ndatos <- data.frame(x=n, x1 = n1, xm1 = nm1, \n                    y = f, y1 = fun1(n1-1), ym1 = fun1(nm1+1) )\n\nfig <- plot_ly(datos, \n               x = ~x,\n               y = ~y, \n               name = TeX(\"f_t\"), \n               type = 'scatter',\n               mode = 'lines+markers') %>% \n  add_trace(x = ~x1, \n            y = ~y1, \n            name = TeX(\"f_{t-1}\"), \n            mode = \"lines+markers\", \n            type = \"scatter\") %>%\n  add_trace(x = ~xm1, \n            y = ~ym1, \n            name = TeX(\"f_{t+1}\"), \n            mode = \"lines+markers\", \n            type = \"scatter\") %>%\n  config(mathjax = 'cdn') %>%\n  layout(title = \"Gráfica de la función y tralaciones horizontales\",\n         xaxis =  list(title =\"n\"))\nfig\n\n\n\n{\"x\":{\"visdat\":{\"f3372f432436\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"f3372f432436\",\"attrs\":{\"f3372f432436\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"name\":\"$f_t$\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"},\"f3372f432436.1\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"name\":\"$f_{t-1}$\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"inherit\":true},\"f3372f432436.2\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"name\":\"$f_{t+1}$\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Gráfica de la función y tralaciones horizontales\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"n\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"y\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-2,-1,0,1,2,3,4],\"y\":[4,2,1,0.5,0.25,0.125,0.0625],\"mode\":\"lines+markers\",\"name\":\"$f_t$\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-1,0,1,2,3,4,5],\"y\":[4,2,1,0.5,0.25,0.125,0.0625],\"mode\":\"lines+markers\",\"name\":\"$f_{t-1}$\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"line\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-3,-2,-1,0,1,2,3],\"y\":[4,2,1,0.5,0.25,0.125,0.0625],\"mode\":\"lines+markers\",\"name\":\"$f_{t+1}$\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(44,160,44,1)\",\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\nTraslación vertical\n\n\nn <- -2:4\nf <- fun1(n) \n\n\ndatos <- data.frame(x=n,  y = f, y1 = f+1, ym1 = f-1)\n\nfig <- plot_ly(datos, \n               x = ~x,\n               y = ~y, \n               name = TeX(\"f_t\"), \n               type = 'scatter',\n               mode = 'lines+markers') %>% \n  add_trace(y = ~y1, \n            name = TeX(\"f_{t}+1\"), \n            mode = \"lines+markers\", \n            type = \"scatter\") %>%\n  add_trace(y = ~ym1, \n            name = TeX(\"f_{t}-1\"), \n            mode = \"lines+markers\", \n            type = \"scatter\") %>%\n  config(mathjax = 'cdn') %>%\n  layout(title = \"Gráfica de la función y traslaciones verticales\",\n         xaxis =  list(title =\"n\"))\nfig\n\n\n\n{\"x\":{\"visdat\":{\"f3375fc4d160\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"f3375fc4d160\",\"attrs\":{\"f3375fc4d160\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"name\":\"$f_t$\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"},\"f3375fc4d160.1\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"name\":\"$f_{t}+1$\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"inherit\":true},\"f3375fc4d160.2\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"name\":\"$f_{t}-1$\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Gráfica de la función y traslaciones verticales\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"n\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"y\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-2,-1,0,1,2,3,4],\"y\":[4,2,1,0.5,0.25,0.125,0.0625],\"mode\":\"lines+markers\",\"name\":\"$f_t$\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-2,-1,0,1,2,3,4],\"y\":[5,3,2,1.5,1.25,1.125,1.0625],\"mode\":\"lines+markers\",\"name\":\"$f_{t}+1$\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"line\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-2,-1,0,1,2,3,4],\"y\":[3,1,0,-0.5,-0.75,-0.875,-0.9375],\"mode\":\"lines+markers\",\"name\":\"$f_{t}-1$\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(44,160,44,1)\",\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\nFunciones\ntrigonométricas en tiempo discreto\n\n\nn <- -10:10\nf <- cos(2*n)\nf1 <- cos((5/3) * pi * n)\n\n\ndatos <- data.frame(x=n,  y = f, y1 = f1)\n\nfig <- plot_ly(datos, \n               x = ~x,\n               y = ~y, \n               name = \"función no periodica\", \n               type = 'scatter',\n               mode = 'lines+markers') %>% \n  add_trace(y = ~y1, \n            name = \"función periodica\", \n            mode = \"lines+markers\", \n            type = \"scatter\") %>%\n  layout(title = \"Gráfica\",\n         xaxis =  list(title =\"n\"))\nfig\n\n\n\n{\"x\":{\"visdat\":{\"f3375291beb3\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"f3375291beb3\",\"attrs\":{\"f3375291beb3\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"name\":\"función no periodica\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"},\"f3375291beb3.1\":{\"x\":{},\"y\":{},\"mode\":\"lines+markers\",\"name\":\"función periodica\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Gráfica\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"n\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"y\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10],\"y\":[0.408082061813392,0.66031670824408,-0.957659480323385,0.136737218207834,0.843853958732492,-0.839071529076452,-0.145500033808614,0.960170286650366,-0.653643620863612,-0.416146836547142,1,-0.416146836547142,-0.653643620863612,0.960170286650366,-0.145500033808614,-0.839071529076452,0.843853958732492,0.136737218207834,-0.957659480323385,0.66031670824408,0.408082061813392],\"mode\":\"lines+markers\",\"name\":\"función no periodica\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10],\"y\":[-0.500000000000002,-1,-0.499999999999999,0.5,1,0.499999999999999,-0.5,-1,-0.5,0.5,1,0.5,-0.5,-1,-0.5,0.499999999999999,1,0.5,-0.499999999999999,-1,-0.500000000000002],\"mode\":\"lines+markers\",\"name\":\"función periodica\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"line\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\nHeaviside y delta de\nKronecker\n\n\nheaviside <- function(x, a = 0){\n  \n  aux <- function(x, a){\n    if(x>=a){\n      return(1)\n      }else{\n        return(0)\n      }\n  }\n  \n  return(unlist(lapply(x,aux,a=a)))\n  \n}\n\nkronecker <- function(x, a = 0){\n  \n  aux <- function(x, a){\n    if(x==a){\n      return(1)\n      }else{\n        return(0)\n      }\n  }\n  \n  return(unlist(lapply(x,aux,a=a)))\n  \n  }\n\n\n\n\n\nheaviside(-2:8)\n\n\n [1] 0 0 1 1 1 1 1 1 1 1 1\n\n\n\nkronecker(-2:9,7)\n\n\n [1] 0 0 0 0 0 0 0 0 0 1 0 0\n\nEcuaciones en diferencias\nlineales\n\n\nSea la siguiente ecuación en diferencias en formato de atraso\n\\[y_t  - 5y_{t-1} + 6y_{t-2} = 3x_{t-1} +\n5x_{t-2},\\;\\;x_t=(0.5)^t\\;\\;t\\geq 0,\\;\\;y_{-1}=\\frac{11}{6},\ny_{-2}=\\frac{37}{36}\\] Vamos a realizar dos iteraciones para\nencontrar los valores de \\(y_0\\) y\n\\(y_{1}\\)\n\n\ny = c(37/36, 11/6)\n\ny_0 =  5 * y[2] - 6 * y[1] # t = 0\ny <- c(y,y_0)\n\ny_1= 3 * (0.5) ** (0)  + 5 * y[3] - 6 * y[2] # t = 1\ny <- c(y,y_1)\ny\n\n\n[1] 1.027778 1.833333 3.000000 7.000000\n\nEl sistema anterior en formato de adelanto es\n\\[y_{t+2} -5y_{t+1} + 6y_{t} =\n3x_{t+1}+5x_t,\\;\\;x_t=(0.5)^t\\;\\;t\\geq 0,\\;\\;y_{1}=7, y_{0}=3\\]\n¿Se distingue la convención de las condiciones iniciales? ¿Cuál\nsería?\nLa solución analítica de este sistema es\n\\[y_t = \\frac{18}{5}(3)^t -\n\\frac{7}{3}(2)^t + \\frac{26}{15}(0.5)^t,\\;\\;t\\geq 0\\]\nEvaluamos esta función \\(t\\in\\{0,1,..,5\\}\\)\n\n\nyt = function(t){\n  \n  y <- (18 / 5) * 3 ^ t - (7 / 3) * 2 ^ t + (26 / 15) * 0.5 ^ t\n  return(y)\n}\n\nt <- 0:5\nyt(t)\n\n\n[1]   3.0000   7.0000  23.5000  78.7500 254.3750 800.1875\n\nVamos a crear un programa para iterar la ecuación en diferencias y\nver la coincidencia con la solución análitica. Para esto vamos a pensar\nen el formato de adelanto y la siguiente estructura\n\\[a_2y[t+2]+a_{1}y[t+1]+a_0y[t]=b_2x[t+2]+b_{1}x[t+1]+b_0x[t]\\]\n\n\nsimulacion <- function(a, b, y0, x, n){\n    #a = [a0,a1,a2]\n    #b = [b0,b1,b2]\n    #y0 = [y_0, y_1]\n    #x = función \n    #n = punto final de simulacion, comienza en 0\n    \n    y = y0[1]\n    y[2] = y0[2]\n    x <- x(0:n)\n\n    for(t in 1:(n - 1)){\n        y[t + 2] = (b[3] / a[3]) * x[t + 2] + \n        (b[2] / a[3]) * x[t + 1] + (b[1] /a[3] ) * x[t] -\n        (a[2] / a[3]) * y[t + 1] - (a[1] / a[3]) * y[t]\n        }\n    return(y)\n}\n\n\n\n\n\nx <- function(t){\n  return((0.5) ^ t)\n}\n\na <- c(6 , -5, 1)\nb <- c(5, 3, 0)\ny0 <- c(3, 7)\nn <- 5\n\ny <- simulacion(a,b,y0, x, n)\n\ny\n\n\n[1]   3.0000   7.0000  23.5000  78.7500 254.3750 800.1875\n\nRealizamos la gráfica de la solución\n\n\nfig <- plot_ly(x = 0:5,\n               y = y, \n               type = 'scatter',\n               mode = 'lines+markers') %>% \n  layout(title = \"Solución para hasta t=5\",\n         xaxis =  list(title =\"t\"))\nfig\n\n\n\n{\"x\":{\"visdat\":{\"f3373c279126\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"f3373c279126\",\"attrs\":{\"f3373c279126\":{\"x\":[0,1,2,3,4,5],\"y\":[3,7,23.5,78.75,254.375,800.1875],\"mode\":\"lines+markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Solución para hasta t=5\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"t\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":[]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[0,1,2,3,4,5],\"y\":[3,7,23.5,78.75,254.375,800.1875],\"mode\":\"lines+markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\nTranformada \\(\\mathscr{Z}\\)\nLa transformada \\(\\mathscr{Z}\\) para\nlos sistemas en tiempo discreto, juega el mismo papel que la\ntransformada de Laplace para los sistemas en tiempo continuo.\n\n\nSistemas en diferencias\n\n\n\n\n\n",
      "last_modified": "2022-07-24T17:44:18-05:00"
    }
  ],
  "collections": []
}
